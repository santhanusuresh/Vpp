{"version":3,"sources":["assets/Shape.svg","assets/four-rectangles.svg","assets/cog-wheel.svg","assets/stock-market-arrow.svg","assets/stock-market-arrow-up.svg","assets/spinner.gif","assets/map.svg","assets/Avatar.svg","components/common/RadialSeparators.js","components/common/Chart.js","reducers/authReducer.js","actions/types.js","reducers/rootReducer.js","store/store.js","components/layout/Layout.js","actions/authActions.js","components/common/Spinner.js","components/dashboard/Dashboard.js","components/auth/Login.js","components/events/Events.js","components/edit-event/EditEvent.js","components/common/PrivateRoute.js","App.js","serviceWorker.js","index.js","assets/shinehub-logo.svg","assets/icon-analytics.svg","assets/Calendar.svg","assets/menu-icon.svg","assets/avatar-icon.png"],"names":["module","exports","Separator","props","style","position","height","transform","turns","RadialSeparators","count","_","range","map","index","Chart","state","config","this","availablePower","netInGrid","time","console","log","newTime","parseInt","split","title","text","legend","enabled","plotOptions","line","marker","xAxis","categories","labels","format","credits","series","name","data","color","tooltip","valueDecimals","setState","Component","initialState","isAuthenticated","loading","user","userid","username","userpassword","sessionUser","error","reducer","action","type","payload","rootReducer","combineReducers","auth","authReducer","middlewares","thunk","store","createStore","compose","applyMiddleware","useStyles","makeStyles","theme","root","display","backgroundColor","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","drawerRight","drawerWidth","drawerZIndex","withStyles","listRootClose","margin","paddingLeft","fontSize","connect","getSessionUser","password","dispatch","fetch","method","mode","headers","Base64","encode","then","res","json","userDetails","localStorage","setItem","logout","history","removeItem","push","withRouter","classes","useTheme","React","useState","open","openRight","profile","editProfile","navbarHidden","setSessionUser","email","phone","profileDetails","setProfileDetails","handleDrawerOpen","side","onChange","e","target","value","handleDrawerClose","useEffect","id","success","location","pathname","className","CssBaseline","AppBar","clsx","Toolbar","IconButton","aria-label","onClick","edge","src","menuIcon","Typography","variant","noWrap","href","logo","greyAvatar","Drawer","textAlign","paper","direction","Divider","List","flexDirection","icon","analytics","calendar","item","ListItem","button","key","ListItemIcon","ListItemText","primary","anchor","paperAnchorRight","onClose","paddingTop","fontWeight","fontFamily","toUpperCase","TextField","inputProps","Button","body","JSON","stringify","d","onProfileSave","textTransform","bottom","children","Spinner","spinnerImg","customStyles","control","base","borderColor","isFocused","muiTheme","createMuiTheme","overrides","MuiPickersToolbar","MuiPickersCalendarHeader","switchHeader","MuiPickersDay","day","daySelected","dayDisabled","current","MuiPickersModal","dialogAction","MuiOutlinedInput","borderWidth","Dashboard","events","chartData","locations","openAddEvent","date","from","to","status","power","windowHeight","window","innerHeight","windowWidth","innerWidth","validationText","onResizeWindow","onClickSave","groupId","starttime","moment","endtime","eventStatus","parse","Promise","all","showEvents","filter","onFilterEvents","maxPower","onChangeLocation","addEventListener","r","removeEventListener","chartContent","batteryContent","upcomingEventsContent","Object","keys","length","BatteryCap","CurrentAvailablePower","BatteryCount","SystemNumber","BatteryTotal","Card","borderRadius","CardContent","strokeWidth","circleRatio","styles","buildStyles","rotation","strokeLinecap","trailColor","pathColor","alignSelf","borderBottomColor","background","Math","round","paddingBottom","overflowWrap","marginBottom","paddingRight","charge","NetToGrid","Time","AvailablePower","event","startTime","endTime","includes","letterSpacing","placeholder","options","label","overflow","right","top","Fab","Add","Dialog","fullWidth","DialogContent","ThemeProvider","utils","MomentUtils","DatePicker","disableToolbar","inputVariant","step","Slider","max","thumb","track","firstBarColor","secondBarColor","dateInput","md5","require","Login","onSignIn","preventDefault","login","nextProps","noValidate","onSubmit","backgroundImage","textField","catch","err","input","MuiInputBase","focus","formControl","focused","datePicker","selectColor","palette","Events","filterLocation","filterDate","filterStartPower","filterEndPower","filterStatus","openPriceDialog","price","touchedPower","idPrice","namePrice","datePrice","startTimePrice","endTimePrice","hasCompletedPrice","isEmail","onClickSavePrice","cvs","a","p","onClickSaveAndSendPrice","confirm","onClickEvent","newEvents","availablepower","groupname","sysReDCompVal","compval","sysReDControlMode","sysReDCreatTime","createdTime","sysReDDaily","sysReDDate","sysReDEndCap","endCap","sysReDEstGen","estgen","sysReDEventStatus","eventstatus","sysReDGroupID","sysReDId","sysReDIsComplete","isComplete","sysReDIsEmail","isemail","sysReDIsPrice","isprice","sysReDIsStart","isStart","sysReDIsValid","sysReDMode","sysReDNeedCharge","sysReDPower","sysReDPrice","sysReDSOC","sysReDStartCap","startBattery","sysReDStartTime","sysReDEndTime","sysReDStatus","sysReDTargetCap","finalBattery","Date","_d","getDate","onClickPriceDialog","hasCompleted","editClicked","Array","isArray","Table","TableHead","TableCell","TableBody","row","TableRow","border","cursor","MoneyOff","AttachMoneyOutlined","DialogTitle","InputProps","startAdornment","InputAdornment","endAdornment","disabled","DialogActions","valueLabelDisplay","aria-labelledby","menuPortalTarget","document","datePickerInput","borderStyle","dialogContainer","getItem","EditEvent","completed","onExportEvent","onEditEvent","st","et","i","updatedEvent","dara","undefined","CallMade","minWidth","maxWidth","CallReceived","component","rest","render","expiretime","getTime","checkExpireTime","App","exact","path","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d9becf08.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Shape.386b41d8.svg\";","module.exports = __webpack_public_path__ + \"static/media/four-rectangles.be206108.svg\";","module.exports = __webpack_public_path__ + \"static/media/cog-wheel.df50409b.svg\";","module.exports = __webpack_public_path__ + \"static/media/stock-market-arrow.a875d9dd.svg\";","module.exports = __webpack_public_path__ + \"static/media/stock-market-arrow-up.668a2a22.svg\";","module.exports = __webpack_public_path__ + \"static/media/spinner.0d0345f6.gif\";","module.exports = __webpack_public_path__ + \"static/media/map.976a89a0.svg\";","module.exports = __webpack_public_path__ + \"static/media/Avatar.c777eefd.svg\";","import React from \"react\";\nimport _ from \"lodash\";\n\nfunction Separator(props) {\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        height: \"100%\",\n        \n        transform: `rotate(${props.turns}turn) rotate(-115deg)`\n      }}\n    >\n      <div style={props.style} />\n    </div>\n  );\n}\n\nfunction RadialSeparators(props) {\n  const turns = 1 / props.count;\n  return _.range(props.count/1.5).map(index => (\n    <Separator turns={index * turns} style={props.style} />\n  ));\n}\n\nexport default RadialSeparators;\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport HighStock from 'react-highcharts';\n\n\nclass Chart extends Component {\n  state = { \n    config:{}\n   }\n\n  componentDidMount(){\n\n    const {availablePower,netInGrid,time}=this.props;\n    console.log('time chart',time);\n    const newTime=time.map(time=>([time,parseInt(time.split(\":\")[1])]));\n    console.log('newTime',newTime);\n  const config = {\n      // rangeSelector: {\n      //   enabled:false,\n      //   lang:{\n      //     rangeSelectorZoom:''\n      //   },\n      //   xAxis:{\n      //     enabled:false\n      //   },\n      //   selected: 1,\n      //   inputEnabled:false,\n      //   buttonTheme:{\n      //     visibility:'hidden'\n      //   },\n      //   labelStyle:{\n      //     visibility:'hidden'\n      //   }\n      // },\n      title: {\n        text: ''\n      },\n      legend:{\n        enabled:false\n      },\n      plotOptions:\n      {\n        line:{\n          marker:{\n            enabled:false\n          }\n        }\n      },\n      xAxis:[{\n        // type:'category',\n        categories:time,\n        labels:{\n          enabled:true,\n          format: \"{value}\"\n        }\n      }],\n      credits: {\n          enabled: false\n      },\n      series: [\n      //   {\n      //   data:newTime,\n      // }\n      // ,\n      {\n        name: 'Available Power',\n        data: availablePower,\n        color:\"#25A8A8\",\n        tooltip: {\n          valueDecimals: 2\n        }\n      },\n        {\n        name: 'Net In Grid',\n        data: netInGrid,\n        color:'#B5D145',\n        tooltip: {\n          valueDecimals: 2\n        }\n      }\n    ]\n    };\n    \n    this.setState({config});\n\n  }\n  \n\n  render() {\n    const {config}=this.state;\n    return (\n      <HighStock config={config}></HighStock>\n      );\n  }\n}\n\nexport default Chart;\n","import {LOGIN,LOGIN_ERROR, SESSION_USER} from '../actions/types';\n\nconst initialState={\n\n    isAuthenticated:false,\n    loading:false,\n    user:'',\n    userid:'',\n    username:'',\n    userpassword:'',\n    sessionUser:{},\n    error:{}\n\n};\n\nconst reducer=(state=initialState,action)=>{\n\n    switch (action.type) {\n        case LOGIN:\n            return {\n                ...state,\n                isAuthenticated:action.payload.isAuthenticated,\n                user:action.payload.user,\n                userid:action.payload.userid,\n                username:action.payload.username,\n                userpassword:action.payload.userpassword\n            }\n        case LOGIN_ERROR:\n            return {\n                ...state,\n                error:action.payload\n            }\n        case SESSION_USER:\n            return {\n                ...state,\n               sessionUser:action.payload\n            }\n    \n        default:\n            return state;\n    }\n\n\n}\n\nexport default reducer;","export const LOGIN='LOGIN';\nexport const LOGIN_ERROR='LOGIN_ERROR';\nexport const ADD_EVENT_ERROR='ADD_EVENT_ERROR';\nexport const SESSION_USER='SESSION_USER';","import authReducer from './authReducer';\nimport { combineReducers } from 'redux';\n\nconst rootReducer=combineReducers({\n    auth:authReducer\n});\n\n\nexport default rootReducer;","import {createStore, applyMiddleware, compose} from 'redux';\nimport rootReducer  from '../reducers/rootReducer';\nimport thunk from 'redux-thunk';\nimport { ENODEV } from 'constants';\n\n\nconst middlewares=[thunk];\nconst preloadedState={};\n\nconst store=createStore(rootReducer,preloadedState,compose(\n    applyMiddleware(...middlewares),\n    // process.env.NODE_ENV==='production'?null: window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n));\n\n\n\nexport default store;","import React, { useEffect, useState } from \"react\";\nimport clsx from \"clsx\";\n\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport Select from \"react-select\";\nimport { connect } from \"react-redux\";\nimport { getSessionUser, logout } from \"../../actions/authActions\";\n\nimport {\n  Card,\n  CardContent,\n  LinearProgress,\n  Icon,\n  withStyles,\n  Divider,\n  Button,\n  TextField\n} from \"@material-ui/core\";\nimport {\n  CircularProgressbar,\n  buildStyles,\n  CircularProgressbarWithChildren\n} from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport RadialSeparators from \"../common/RadialSeparators\";\nimport ChartJS from \"../common/Chart\";\nimport logo from \"../../assets/shinehub-logo.svg\";\nimport greyAvatar from \"../../assets/avatar-icon.png\";\nimport bell from \"../../assets/Shape.svg\";\nimport analytics from \"../../assets/icon-analytics.svg\";\nimport fourRectangles from \"../../assets/four-rectangles.svg\";\nimport calendar from \"../../assets/Calendar.svg\";\nimport cogWheel from \"../../assets/cog-wheel.svg\";\nimport menuIcon from \"../../assets/menu-icon.svg\";\nimport stockMarketArrowDown from \"../../assets/stock-market-arrow.svg\";\nimport stockMarketArrowUp from \"../../assets/stock-market-arrow-up.svg\";\nimport { withRouter } from \"react-router-dom\";\nimport { SupervisedUserCircleOutlined } from \"@material-ui/icons\";\nimport { SESSION_USER } from \"../../actions/types\";\nimport store from \"../../store/store\";\nimport {Base64} from \"js-base64\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    backgroundColor: \"#FBFBFB\"\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 2,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\"\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9) + 1\n    }\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  drawerRight: {\n    width: drawerWidth + 100\n  },\n  drawerZIndex: {\n    zIndex: 0\n  }\n}));\n\nconst Layout = props => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [state, setState] = React.useState({\n    open: false,\n    openRight: false,\n    profile: \"profile\",\n    editProfile: false,\n    navbarHidden: false\n  });\n  let userID = '';\n  const [sessionUser, setSessionUser] = React.useState({});\n  const [profileDetails, setProfileDetails] = useState({\n    email: \"\",\n    phone: \"\"\n  });\n  function handleDrawerOpen(side, profile) {\n    setState({\n      ...state,\n      [side]: true,\n      profile\n    });\n  }\n\n  const onProfileSave = () => {\n    const { email, phone } = profileDetails;\n    const {isAuthenticated,user, userid,username,userpassword} = props.auth;\n    const password = userpassword;\n    const userID = userid;\n    // const username = 'saraswata';\n    // const password = '#abcd123';\n    // const userID = 'c4fb633e19ec8d3948e1951d62f5f067';\n    fetch(\n        \"https://vppspark.shinehub.com.au:8443/backend-service/user/\"+userID,\n        {\n          method: \"PATCH\",\n          headers:{\n            \"Authorization\":\"Basic \"+Base64.encode(`${username}:${password}`),\n            \"Content-Type\": \"application/json\"\n          },\n          body:JSON.stringify({\n            email:email,\n            phone:phone\n          })\n\n        }\n    )\n        .then(res => res.json())\n        .then(res => {\n          props.getSessionUser(username,password)\n              .then(res=>res.json())\n              .then(res=>{\n\n                // console.log('session user post update',res);\n\n                setProfileDetails({\n                  ...profileDetails,\n                  email: res.data.email,\n                  phone: res.data.phone\n                });\n                setSessionUser(res.d);\n                setState({...state,editProfile:false});\n                store.dispatch({\n                  type: SESSION_USER,\n                  payload: res.data\n                });\n              });\n\n\n        })\n\n  };\n\n  const onChange = e => {\n    const { email, phone } = profileDetails;\n\n    setProfileDetails({ ...profileDetails, [e.target.name]: e.target.value });\n  };\n\n  function handleDrawerClose(side) {\n    setState({ ...state, [side]: false });\n  }\n\n  useEffect(() => {\n    // console.log(\"layout\");\n    const {username,userpassword} = props.auth;\n    const password = userpassword;\n    props\n        .getSessionUser(username,password)\n        .then(res => res.json())\n        .then(res => {\n          // console.log('session expiretime',typeof res.success);\n          // console.log('++++++++++++++res',res);\n          userID = res.data.id;\n\n          // console.log('++++++++++++++userID',userID);\n          if(res.success===0){\n            props.history.push('/login');\n          }\n\n          // console.log(\"session user\", res);\n          setProfileDetails({\n            ...profileDetails,\n            email: res.data.email,\n            phone: res.data.phone\n          });\n          setSessionUser(res.data);\n\n          store.dispatch({\n            type: SESSION_USER,\n            payload: res.data\n          });\n        });\n\n    if (props.location.pathname === \"/login\" || !props.auth.isAuthenticated ) {\n      // console.log(\"yaha aaya\");\n      setState({ ...state, navbarHidden: true });\n    } else {\n      // console.log(\"yaha bhi aaya\");\n      setState({ ...state, navbarHidden: false });\n    }\n    // console.log(\"navbarHidden\", state.navbarHidden);\n  }, []);\n\n  const onClickLogout = history => {\n    props.logout(history);\n  };\n\n  return (\n      <div>\n        {state.navbarHidden ? null : (\n            <div className={classes.root}>\n              <CssBaseline />\n              <AppBar\n                  style={{ backgroundColor: \"#fff\" }}\n                  position={\"fixed\"}\n                  className={clsx(classes.appBar, {\n                    [classes.appBarShift]: state.open\n                  })}\n              >\n                <Toolbar>\n                  <div\n                      style={{\n                        width: \"100%\",\n                        display: \"flex\",\n                        justifyContent: \"space-between\",\n                        alignItems: \"center\"\n                      }}\n                  >\n                    <div\n                        style={{\n                          display: \"flex\",\n                          justifyContent: \"center\",\n                          alignItems: \"center\"\n                        }}\n                    >\n                      <IconButton\n                          color=\"inherit\"\n                          aria-label=\"open drawer\"\n                          onClick={() => handleDrawerOpen(\"open\")}\n                          edge=\"start\"\n                          className={clsx(classes.menuButton, {\n                            [classes.hide]: state.open\n                          })}\n                      >\n                        <img src={menuIcon} />\n                      </IconButton>\n                      <Typography  variant=\"h6\" noWrap>\n                        <a  href={\"https://monitoring.shinehub.com.au\"}><img src={logo}/></a>\n                      </Typography>\n                    </div>\n                    <div\n                        style={{\n                          // padding: \"0 3%\",\n                          display: \"flex\",\n                          justifyContent: \"center\",\n                          alignItems: \"center\"\n                        }}\n                    >\n                      {/*<img\n                    // style={{ paddingRight: \"30%\" }}\n                    // src={bell}\n                    // onClick={() => {\n                    //   handleDrawerOpen(\"openRight\", \"bell\");\n                    // }}\n                  />*/}\n                      <img\n                          onClick={() => {\n                            handleDrawerOpen(\"openRight\", \"profile\");\n                          }}\n                          src={greyAvatar}\n                          style={{ width: 30, height: 30 }}\n                      />\n                      {/* <SupervisedUserCircleOutlined style={{color:'#83C4C4',fontSize:'41px'}} onClick={()=>handleDrawerOpen(\"openRight\", \"profile\")} /> */}\n                    </div>\n                  </div>\n                </Toolbar>\n              </AppBar>\n              <Drawer\n                  style={{ textAlign: \"center\", margin: \"0 auto\" }}\n                  variant=\"permanent\"\n                  className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: state.open,\n                    [classes.drawerClose]: !state.open\n                  })}\n                  classes={{\n                    paper: clsx({\n                      [classes.drawerOpen]: state.open,\n                      [classes.drawerClose]: !state.open\n                    })\n                  }}\n                  open={state.open}\n              >\n                <div className={classes.toolbar}>\n                  <IconButton onClick={() => handleDrawerClose(\"open\")}>\n                    {theme.direction === \"rtl\" ? (\n                        <ChevronRightIcon />\n                    ) : (\n                        <ChevronLeftIcon />\n                    )}\n                  </IconButton>\n                </div>\n                <Divider />\n                <List\n                    classes={{\n                      root: classes.listRootClose\n                    }}\n                    style={\n                      state.open\n                          ? {\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            justifyContent: \"space-evenly\",\n                            alignItems: \"center\",\n                            margin: \"0 auto\",\n                            paddingLeft: \"1%\"\n                            // paddingTop:'6vw'\n                          }\n                          : {\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            justifyContent: \"space-evenly\",\n                            alignItems: \"center\",\n                            margin: \"0 auto\",\n                            paddingLeft: \"7%\"\n                            // paddingTop:'6vw'\n                          }\n                    }\n                >\n                  {/*{console.log(\"window.innerHeight\", window.innerHeight)}*/}\n                  {[\n                    { icon: analytics, text: \"Overview\", onClick: \"/\" },\n                    // { icon: fourRectangles, text: \"Fleet\",onClick:\"/fleet\" },\n                    { icon: calendar, text: \"Events\", onClick: \"/events\" }\n                    // { icon: cogWheel, text: \"Settings\",onClick:\"/settings\" }\n                  ].map((item, index) => (\n                      <ListItem\n                          button\n                          style={item.text==='Events'?{paddingLeft:'12%',display: \"flex\", alignItems: \"center\" }:{display: \"flex\", alignItems: \"center\"}}\n                          key={index}\n                          onClick={() => props.history.push(item.onClick)}\n                      >\n                        <ListItemIcon\n\n                        >\n                          <img src={item.icon} />\n                        </ListItemIcon>\n                        <ListItemText\n                            style={{ color: \"#83C4C4\" }}\n                            primary={item.text}\n                            classes={{\n                              root: classes.text\n                            }}\n                        />\n                      </ListItem>\n                  ))}\n                </List>\n              </Drawer>\n              <Drawer\n                  anchor=\"right\"\n                  classes={{\n                    paperAnchorRight: classes.drawerRight\n                  }}\n                  style={{ zIndex: 1 }}\n                  open={state.openRight}\n                  onClose={() => handleDrawerClose(\"openRight\")}\n              >\n                <div className={classes.toolbar} />\n                {/*{console.log(\"state.profile\", state.profile)}*/}\n                {/*{console.log(\"state.profile\", state)}*/}\n                {state.profile === \"profile\" ? (\n                    <div\n                        style={{\n                          display: \"flex\",\n                          position: \"relative\",\n                          flexDirection: \"column\",\n                          alignItems: \"center\",\n                          paddingTop: \"13%\",\n                          height: \"100%\"\n                        }}\n                    >\n                      <div\n                          style={{\n                            width: \"100%\",\n                            flexDirection: \"column\",\n                            display: \"flex\"\n                          }}\n                      >\n                        <div\n                            style={{\n                              display: \"flex\",\n                              flexDirection: \"column\",\n                              justifyContent: \"space-evenly\",\n                              alignItems: \"center\"\n                            }}\n                        >\n                          <img src={greyAvatar} style={{ width: 150, height: 150 }} />\n                          {/* <SupervisedUserCircleOutlined style={{color:'#83C4C4',fontSize:'195px'}}/> */}\n                          <Typography\n                              style={{\n                                padding: \"3% 0 10% 0\",\n                                fontSize: \"200%\",\n                                fontWeight: \"500\",\n                                color: \"#2E384D\",\n                                fontFamily: \"Gotham Rounded Medium\"\n                              }}\n                          >\n                            {props.auth.sessionUser.name}\n                          </Typography>\n                          <Divider style={{ width: \"80%\" }} variant=\"middle\" />\n                        </div>\n                        <div\n                            style={{\n                              width: \"100%\",\n                              display: \"flex\",\n                              flexDirection: \"column\",\n                              justifyContent: \"space-evenly\",\n                              alignItems: \"flex-start\"\n                            }}\n                        >\n                          <div style={{ width: \"100%\", padding: \"6% 0 6% 6%\" }}>\n                            <Typography\n                                style={{\n                                  color: \"#BDBDBD\",\n                                  fontFamily: \"Gotham Rounded Medium\",\n                                  fontSize: 13\n                                }}\n                            >\n                              {\"email\".toUpperCase()}\n                            </Typography>\n                            {state.editProfile ? (\n                                <TextField\n                                    variant=\"outlined\"\n                                    inputProps={{\n                                      height: \"1px\",\n                                      margin: 0,\n                                      padding: 0\n                                    }}\n                                    name=\"email\"\n                                    onChange={onChange}\n                                    value={profileDetails.email}\n                                />\n                            ) : (\n                                <Typography\n                                    style={{\n                                      color: \"#333333\",\n                                      fontFamily: \"Gotham Rounded Medium\"\n                                    }}\n                                >\n                                  {props.auth.sessionUser.email}\n                                </Typography>\n                            )}\n                          </div>\n                          <div style={{ width: \"100%\", paddingLeft: \"6%\" }}>\n                            <Typography\n                                style={{\n                                  color: \"#BDBDBD\",\n                                  fontFamily: \"Gotham Rounded Medium\",\n                                  fontSize: 13\n                                }}\n                            >\n                              {\"phone\".toUpperCase()}\n                            </Typography>\n                            {state.editProfile ? (\n                                <TextField\n                                    variant=\"outlined\"\n                                    inputProps={{\n                                      height: \"1px\",\n                                      margin: 0,\n                                      padding: 0\n                                    }}\n                                    name=\"phone\"\n                                    onChange={onChange}\n                                    value={profileDetails.phone}\n                                />\n                            ) : (\n                                <Typography\n                                    style={{\n                                      color: \"#333333\",\n                                      fontFamily: \"Gotham Rounded Medium\"\n                                    }}\n                                >\n                                  {props.auth.sessionUser.phone}\n                                </Typography>\n                            )}\n                          </div>\n                          {/* {state.editProfile ? (\n                      <div\n                        style={{\n                          width: \"100%\",\n                          paddingLeft: \"6%\",\n                          paddingTop: \"6%\"\n                        }}\n                      >\n                        <Typography>{\"password\".toUpperCase()}</Typography>\n                        <TextField\n                          variant=\"outlined\"\n                          inputProps={{\n                            // height:'1px',\n                            margin: 0,\n                            padding: 0\n                          }}\n                          value=\"password\"\n                        />\n                      </div>\n                    ) : null} */}\n                        </div>\n                        <div\n                            style={{\n                              display: \"flex\",\n                              width: \"100%\",\n                              justifyContent: \"center\",\n                              paddingTop: \"10%\"\n                            }}\n                        >\n                          {!state.editProfile ? (\n                              <Button\n                                  onClick={() =>\n                                      setState({ ...state, editProfile: true })\n                                  }\n                                  variant=\"contained\"\n                                  style={{\n                                    color: \"#fff\",\n                                    backgroundColor: \"#25a8a8\",\n                                    textTransform: \"none\",\n                                    fontFamily: \"Gotham Rounded Medium\"\n                                  }}\n                              >\n                                Edit profile\n                              </Button>\n                          ) : (\n                              <Button\n                                  onClick={() => onProfileSave()}\n                                  variant=\"contained\"\n                                  style={{\n                                    color: \"#fff\",\n                                    backgroundColor: \"#25a8a8\",\n                                    textTransform: \"none\"\n                                  }}\n                              >\n                                Save\n                              </Button>\n                          )}\n                        </div>\n                        <div\n                            style={{\n                              display: \"flex\",\n                              width: \"100%\",\n                              position: \"absolute\",\n                              bottom: \"3%\",\n                              justifyContent: \"center\",\n                              paddingTop: \"10%\"\n                            }}\n                        >\n                          <Button\n                              onClick={() => onClickLogout(props.history)}\n                              variant=\"contained\"\n                              style={{\n                                color: \"#fff\",\n                                backgroundColor: \"#25a8a8\",\n                                textTransform: \"none\",\n                                fontFamily: \"Gotham Rounded Medium\"\n                              }}\n                          >\n                            Logout\n                          </Button>\n                        </div>\n                      </div>\n                    </div>\n                ) : (\n                    <div>\n                      <div\n                          style={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\"\n                          }}\n                      >\n                        <Typography style={{ fontSize: \"200%\", fontWeight: \"bold\" }}>\n                          Coming Soon!\n                        </Typography>\n                      </div>\n                    </div>\n                )}\n              </Drawer>\n            </div>\n        )}\n        <main className={clsx({ [classes.content]: !state.navbarHidden })}>\n          {state.navbarHidden ? null : <div className={classes.toolbar} />}\n          {props.children}\n        </main>\n      </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nconst styles = {\n  // listRootOpen:{\n  //   margin:'0 auto',\n  //   paddingLeft:'7%'\n  // },\n  listRootClose: {\n    margin: \"0 auto\",\n    paddingLeft: \"1%\"\n  },\n  text: {\n    fontSize: \"2vw\"\n  }\n};\n\nexport default withStyles(styles)(\n    connect(\n        mapStateToProps,\n        { getSessionUser, logout }\n    )(withRouter(Layout))\n);\n","import {LOGIN,LOGIN_ERROR,SESSION_USER} from './types';\nimport { Base64 } from 'js-base64';\n\n\nexport const login=(email,password,history,md5)=>dispatch=>{\n\n\n    fetch(\"https://vppspark.shinehub.com.au:8443/backend-service/user/name/\"+email, {\n        method: \"GET\",\n        mode:'cors',\n        headers:{\n            \"Authorization\":\"Basic \"+Base64.encode(`${email}:${password}`),\n            \"Content-Type\": \"application/json\"\n        },\n    })\n        .then(res => res.json())\n        .then(res => {\n            // console.log(\"res\",res);\n            // console.log(\"typeof res\",typeof res.r);\n            if(typeof res.success===\"undefined\"){\n\n                throw res;\n            }\n\n            fetch(\"https://vppspark.shinehub.com.au:8443/backend-service/user/name/\"+email, {\n                method: \"GET\",\n                mode:'cors',\n                headers:{\n                    \"Authorization\":\"Basic \"+Base64.encode(`${email}:${password}`),\n                    \"Content-Type\": \"application/json\"\n                },\n            })\n                .then(res=>res.json())\n                .then(userDetails=>{\n                    // console.log('userDetails',userDetails);\n                    localStorage.setItem('user',res.data);\n                    localStorage.setItem('userID',res.data.id);\n                    localStorage.setItem('exp',1000);\n                    localStorage.setItem('username',email);\n                    localStorage.setItem('password',password);\n\n                    console.log(res.data.id)\n\n                    dispatch({\n                        type:LOGIN,\n                        payload:{\n                            isAuthenticated: res.success===1,\n                            user:res.success===1?'admin':'',\n                            userid:res.data.id,\n                            username:email,\n                            userpassword:password,\n                            // userID:res.success===1?res.data.id:''\n                        }\n                    });\n                    history.push('/');\n                    return;\n                })\n        })\n        .catch(err=>dispatch({\n            type:LOGIN_ERROR,\n            payload:{\n                value:'Incorrect credentials'\n            }\n        }));\n\n\n}\n\nexport const getSessionUser=(username,password)=>dispatch=>{\n    // const username = 'saraswata';\n    // const password = '#abcd123';\n\n    fetch(\"https://vppspark.shinehub.com.au:8443/backend-service/user/name/\"+username, {\n        method: \"GET\",\n        mode:'cors',\n        headers:{\n            \"Authorization\":\"Basic \"+Base64.encode(`${username}:${password}`),\n            \"Content-Type\": \"application/json\"\n        },\n    }) .then(res=>res.json())\n        .then(userDetails=>{\n            // console.log('userDetails',userDetails);\n            localStorage.setItem('exp',1000);\n        })\n\n    return fetch(\"https://vppspark.shinehub.com.au:8443/backend-service/user/name/\"+username,{\n        method: \"GET\",\n        headers:{\n            \"Authorization\":\"Basic \"+Base64.encode(`${username}:${password}`),\n            \"Content-Type\": \"application/json\"\n        },\n    })\n}\n\nexport const logout=(history)=>dispatch=>{\n\n    localStorage.removeItem('user');\n\n    dispatch({\n        type:LOGIN,\n        payload:{\n            isAuthenticated:false,\n            user:'',\n            userid:'',\n            username:'',\n            userpassword:''\n        }\n    })\n\n    history.push('/login');\n    return;\n}","import React from 'react';\nimport spinnerImg from '../../assets/spinner.gif';\n\nconst Spinner = () => {\n    return (\n        <div style={{display:'flex',justifyContent:'center',alignItems:'center'}}>\n            <img src={spinnerImg} style={{width:100}}/>\n        </div>\n    );\n}\n\nexport default Spinner;","import React, {Component} from \"react\";\nimport clsx from \"clsx\";\nimport {makeStyles, useTheme} from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport Select from \"react-select\";\nimport {Base64} from 'js-base64';\nimport {\n    Card,\n    CardContent,\n    LinearProgress,\n    Icon,\n    withStyles,\n    Fab,\n    Dialog,\n    DialogContent,\n    Slider,\n    Button,\n    TextField,\n    createMuiTheme\n} from \"@material-ui/core\";\nimport MomentUtils from \"@date-io/moment\";\nimport {\n    DatePicker,\n    MuiPickersUtilsProvider,\n    TimePicker\n} from \"@material-ui/pickers\";\nimport {\n    CircularProgressbar,\n    buildStyles,\n    CircularProgressbarWithChildren\n} from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport moment from \"moment\";\nimport {connect} from \"react-redux\";\n\nimport RadialSeparators from \"../common/RadialSeparators\";\nimport ChartJS from \"../common/Chart\";\nimport logo from \"../../assets/shinehub-logo.svg\";\nimport avatar from \"../../assets/Avatar.svg\";\nimport bell from \"../../assets/Shape.svg\";\nimport analytics from \"../../assets/icon-analytics.svg\";\nimport fourRectangles from \"../../assets/four-rectangles.svg\";\nimport calendar from \"../../assets/Calendar.svg\";\nimport cogWheel from \"../../assets/cog-wheel.svg\";\nimport menuIcon from \"../../assets/menu-icon.svg\";\nimport stockMarketArrowDown from \"../../assets/stock-market-arrow.svg\";\nimport stockMarketArrowUp from \"../../assets/stock-market-arrow-up.svg\";\nimport Spinner from \"../common/Spinner\";\nimport {Add} from \"@material-ui/icons\";\nimport \"./Dashboard.css\";\nimport store from \"../../store/store\";\nimport {LOGIN_ERROR} from \"../../actions/types\";\nimport {ThemeProvider} from \"@material-ui/styles\";\n\n\nconst customStyles = {\n    control: (base, state) => {\n        // console.log('state',state);\n        // console.log('base',base);\n        return {\n            ...base,\n            // borderColor: state.isFocused?'red':'blue',\n            \"&:hover\": {\n                borderColor: state.isFocused ? \"#00008b\" : base.borderColor\n            }\n            // You can also use state.isFocused to conditionally style based on the focus state\n        }\n    }\n};\n\n// const username = 'saraswata';\n// const password = '#abcd123';\n// const userID = 'c4fb633e19ec8d3948e1951d62f5f067';\n\nconst muiTheme = createMuiTheme({\n    overrides: {\n        MuiPickersToolbar: {\n            toolbar: {\n                backgroundColor: \"#25A8A8\"\n            }\n        },\n        MuiPickersCalendarHeader: {\n            switchHeader: {\n                // backgroundColor: lightBlue.A200,\n                // color: \"white\",\n            }\n        },\n        MuiPickersDay: {\n            day: {\n                color: \"#25A8A8\"\n            },\n            daySelected: {\n                backgroundColor: \"#25A8A8\"\n            },\n            dayDisabled: {\n                color: \"#25A8A8\"\n            },\n            current: {\n                color: \"#25A8A8\"\n            }\n        },\n        MuiPickersModal: {\n            dialogAction: {\n                color: \"#25A8A8\"\n            }\n        },\n        MuiOutlinedInput: {\n            // input:{\n            //     border:'0.2rem solid black',\n            //     borderRadius:'2px',\n            //     '&$focused':{\n            //       border:'0.2rem solid red',\n            //       borderRadius:'100px'\n            //     }\n            // },\n            // focused:{}\n            root: {\n                position: 'relative',\n                '& $notchedOutline': {\n                    borderColor: 'rgba(0, 0, 0, 0.23)',\n                },\n                '&:hover:not($disabled):not($focused):not($error) $notchedOutline': {\n                    borderColor: '#00008b',\n                    // Reset on touch devices, it doesn't add specificity\n                    '@media (hover: none)': {\n                        borderColor: 'rgba(0, 0, 0, 0.23)',\n                    },\n                },\n                '&$focused $notchedOutline': {\n                    borderColor: '#4A90E2',\n                    borderWidth: 2,\n                },\n            },\n        }\n    }\n});\n\nclass Dashboard extends Component {\n    state = {\n        events: [],\n        chartData: [],\n        locations: [],\n        loading: true,\n        openAddEvent: false,\n        location: null,\n        date: null,\n        from: null,\n        to: null,\n        status: null,\n        power: 45,\n        windowHeight: window.innerHeight,\n        windowWidth: window.innerWidth,\n        validationText: \"\"\n    };\n\n\n    componentDidMount() {\n        const {isAuthenticated, user,userid} = this.props.auth;\n        const {username,userpassword} = this.props.auth;\n        const password = userpassword;\n        const userID = userid;\n\n        console.log(\"isAuthenticated\", isAuthenticated);\n        console.log(\"userid\", userid);\n        console.log(\"username\", username);\n        console.log(\"password\", password);\n\n        window.addEventListener(\"resize\", this.onResizeWindow);\n\n        fetch(\n            \"https://vppspark.shinehub.com.au:8443/backend-service/dashboard/data/\",\n            {\n                method: \"GET\",\n                headers: {\n                    \"Authorization\": \"Basic \" + Base64.encode(`${username}:${password}`),\n                    \"Content-Type\": \"application/json\"\n                },\n            }\n        )\n            .then(chartData => chartData.json())\n            .then(chartData => {\n                // console.log(\"isAuthenticated\", isAuthenticated);\n\n                return fetch(\n                    \"https://vppspark.shinehub.com.au:8443/backend-service/group/\",\n                    {\n                        method: \"GET\",\n                        headers: {\n                            \"Authorization\": \"Basic \" + Base64.encode(`${username}:${password}`),\n                            \"Content-Type\": \"application/json\"\n                        },\n                    }\n                )\n                    .then(res => res.json())\n                    .then(locations => {\n                        fetch(\n                            \"https://vppspark.shinehub.com.au:8443/backend-service/event/upcoming/\",\n                            {\n                                method: \"GET\",\n                                headers: {\n                                    \"Authorization\": \"Basic \" + Base64.encode(`${username}:${password}`),\n                                    \"Content-Type\": \"application/json\"\n                                },\n                            }\n                        )\n                            .then(res => res.json())\n                            .then(events => {\n\n                                // console.log(\"events\", events);\n                                // console.log(\"locations\", locations);\n                                // console.log(\"chartData\", chartData);\n\n                                if (events.r === -2 || chartData.success != 1) {\n                                    return this.props.history.push('/login');\n                                }\n                                this.setState({\n                                    loading: false,\n                                    locations: locations.data,\n                                    events: events.data ? events.data : [],\n                                    chartData: chartData.data ? chartData.data : {}\n                                });\n                            });\n                    });\n            });\n    }\n\n    onResizeWindow = () => {\n        console.log(\"width\", window.innerWidth);\n        this.setState({\n            windowWidth: window.innerWidth,\n            windowHeight: window.innerHeight\n        });\n        console.log(\"height\", window.innerHeight);\n    };\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.onResizeWindow);\n    }\n\n    componentDidUpdate() {\n        console.log(\"isAuthenticated\", this.props.auth.isAuthenticated);\n    }\n\n    // onClickSave = () => {\n    //   const { isAuthenticated, user } = this.props.auth;\n    //   const { power, location, date, from, to,openAddEvent } = this.state;\n    //   console.log(\"typeof from\", typeof parseInt(location.id));\n    //   console.log(\"typeof from\", typeof parseInt(from));\n    //   console.log(\" from\", from);\n    //   console.log(\"typeof to\", typeof parseInt(to));\n    //   console.log(\"typeof date\", typeof date);\n    //   console.log(\"date\", date);\n    //   console.log(\"typeof date\", typeof power);\n\n    //   if(date===null || date){\n    //     return;\n    //   }\n    //   if(location===null || location){\n    //     return;\n    //   }\n    //   if(from===null || from){\n    //     return;\n    //   }\n    //   if(to===null || to){\n    //     return;\n    //   }\n\n    //   fetch(\n    //     \"https://monitoring.shinehub.com.au/handler/web/Group/handleAddRelationDispatch.php\",\n    //     {\n    //       method: \"POST\",\n    //       body: JSON.stringify({\n    //         d: JSON.stringify({\n    //           cvs: {\n    //             a: parseInt(location.id),\n    //             st: parseInt(from.value),\n    //             et: parseInt(to.value),\n    //             // d: moment(date._d).format('YYYY-MM-DD'),\n    //             d: date.toString(),\n    //             p: power,\n    //             i: 0\n    //           }\n    //         })\n    //       })\n    //     }\n    //   )\n    //     .then(res => res.text())\n    //     .then(res => {\n    //       console.log(\"save\", res);\n    //       Promise.all([\n    //         fetch(\n    //           \"https://monitoring.shinehub.com.au/handler/web/Group/handleQueryGroupAllDischarge.php\",\n    //           {\n    //             method: \"POST\",\n    //             body: JSON.stringify({\n    //               d: JSON.stringify({\n    //                 cvs: {\n    //                   u: user\n    //                 }\n    //               })\n    //             })\n    //           }\n    //         ),\n    //         fetch(\n    //           \"https://monitoring.shinehub.com.au/handler/web/Group/handleQueryGroupList.php\",\n    //           {\n    //             method: \"POST\",\n    //             body: JSON.stringify({\n    //               d: JSON.stringify({\n    //                 cvs: {\n    //                   u: user\n    //                 }\n    //               })\n    //             })\n    //           }\n    //         )\n    //       ])\n    //         .then(res => res.map(value => value.json()))\n    //         .then(res => {\n    //           let eventsRes, locationsRes;\n    //           Promise.all([res[0], res[1]]).then(res => {\n    //             console.log(\"reses\", res);\n    //             return this.setState({\n    //               loading: false,\n    //               openAddEvent: false,\n    //               showEvents: res[0].d,\n    //               events: res[0].d,\n    //               locations: res[1].d\n    //             });\n    //           });\n    //         });\n    //     });\n    // };\n\n    onClickSave = () => {\n        const {isAuthenticated, user} = this.props.auth;\n        const {userid,username,userpassword} = this.props.auth;\n        const password = userpassword;\n        const userID = userid;\n        const {power, location, date, from, to} = this.state;\n\n        if (location === null) {\n            return this.setState({validationText: \"Please enter all details\"});\n        }\n\n        if (date === null) {\n            return this.setState({validationText: \"Please enter all details\"});\n        }\n\n        if (from === null) {\n            return this.setState({validationText: \"Please enter all details\"});\n        }\n\n        if (to === null) {\n            return this.setState({validationText: \"Please enter all details\"});\n        }\n        //\n        // console.log(\"typeof from\", typeof parseInt(location.id));\n        // console.log(\"typeof from\", typeof parseInt(from));\n        // console.log(\" from\", from);\n        // console.log(\"typeof to\", typeof parseInt(to));\n        // console.log(\"typeof date\", typeof date);\n        // console.log(\"date\", date);\n        // console.log(\"typeof date\", typeof power);\n\n        fetch(\n            \"https://vppspark.shinehub.com.au:8443/backend-service/event/group/\",\n            {\n                method: \"POST\",\n                headers: {\n                    \"Authorization\": \"Basic \" + Base64.encode(`${username}:${password}`),\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    groupId: location.id,\n                    starttime: moment(from, \"HH:mm:ss\").format(\"HH:mm\"),\n                    endtime: moment(to, \"HH:mm:ss\").format(\"HH:mm\"),\n                    date: moment(date).format(\"YYYY-MM-DD\"),\n                    power: power*1000,\n                    eventStatus : 0\n                })\n\n            }\n        )\n            .then(res => res.text())\n            .then(res => {\n                // console.log(\"save\", res);\n                // console.log(\"res.success\", JSON.parse(res).success);\n                // console.log(\"res.success\", typeof JSON.parse(res).success);\n                if (JSON.parse(res).success !== 1) {\n                    return store.dispatch({\n                        type: LOGIN_ERROR,\n                        payload: {\n                            value:\n                                \"Cannot add this event. Please check your details and try again!\"\n                        }\n                    });\n                }\n                Promise.all([\n                    fetch(\n                        \"https://vppspark.shinehub.com.au:8443/backend-service/event/upcoming/\",\n                        {\n                            method: \"GET\",\n                            headers: {\n                                \"Authorization\": \"Basic \" + Base64.encode(`${username}:${password}`),\n                                \"Content-Type\": \"application/json\"\n                            },\n                        }\n                    ),\n                    fetch(\n                        \"https://vppspark.shinehub.com.au:8443/backend-service/group/\",\n                        {\n                            method: \"GET\",\n                            headers: {\n                                \"Authorization\": \"Basic \" + Base64.encode(`${username}:${password}`),\n                                \"Content-Type\": \"application/json\"\n                            },\n                        }\n                    )\n                ])\n                    .then(res => res.map(value => value.json()))\n                    .then(res => {\n                        let eventsRes, locationsRes;\n                        Promise.all([res[0], res[1]]).then(res => {\n                            return this.setState({\n                                loading: false,\n                                openAddEvent: false,\n                                showEvents: res[0].data,\n                                events: res[0].data,\n                                locations: res[1].data\n                            });\n                        });\n                    });\n            });\n    };\n\n    onChange = (e, name, filter) => {\n        console.log(\"e\", e);\n\n        switch (name) {\n            case \"date\":\n                const date = moment(e).format(\"YYYY-MM-DD\");\n                // const date = e;\n\n                return this.setState({[name]: date}, () => {\n                    if (filter) {\n                        this.onFilterEvents();\n                    }\n                });\n\n            case \"location\":\n                return this.setState({location: e, power: e.maxPower}, () => {\n                    if (filter) {\n                        console.log(\"running callback\");\n                        this.onFilterEvents();\n                    }\n                });\n\n            default:\n                return this.setState({[name]: e}, () => {\n                    if (filter) {\n                        this.onFilterEvents();\n                    }\n                });\n        }\n    };\n\n    onChangeLocation = (e, name) => {\n        const {userid,username,userpassword} = this.props.auth;\n        const password = userpassword;\n        const userID = userid;\n        this.setState({[name]: e, loading: true}, () => {\n            console.log(\"e.id\", e.id);\n            fetch(\n                \"https://vppspark.shinehub.com.au:8443/backend-service/event/upcoming/\",\n                {\n                    method: \"GET\",\n                    headers: {\n                        \"Authorization\": \"Basic \" + Base64.encode(`${username}:${password}`),\n                        \"Content-Type\": \"application/json\"\n                    },\n                }\n            )\n                .then(res => res.json())\n                .then(events => {\n                    fetch(\n                        \"https://vppspark.shinehub.com.au:8443/backend-service/dashboard/data/group/\" + e.id,\n                        {\n                            method: \"GET\",\n                            headers: {\n                                \"Authorization\": \"Basic \" + Base64.encode(`${username}:${password}`),\n                                \"Content-Type\": \"application/json\"\n                            },\n                        }\n                    )\n                        .then(res => res.json())\n                        .then(chartData => {\n                            // console.log(\"api 19 res\", events);\n                            // console.log(\"api 19 res\", chartData);\n                            this.setState({\n                                events: events.data ? events.data : [],\n                                chartData: chartData.data ? chartData.data : {},\n                                loading: false\n                            });\n                        });\n                });\n        });\n    };\n\n    render() {\n        const {classes} = this.props;\n        const {isAuthenticated, user, error} = this.props.auth;\n        const {\n            events,\n            chartData,\n            locations,\n            loading,\n            location,\n            date,\n            to,\n            from,\n            power,\n            openAddEvent,\n            windowHeight,\n            windowWidth,\n            validationText\n        } = this.state;\n\n        let chartContent;\n        let batteryContent;\n        let upcomingEventsContent;\n\n        if (Object.keys(chartData).length > 0) {\n            // console.log('results',graphcfreetdIna)\n            chartData.BatteryCap = chartData.CurrentAvailablePower;\n            chartData.BatteryCount = chartData.SystemNumber;\n            chartData.BatteryTotal = chartData.CurrentAvailablePower;\n            const {BatteryCap, BatteryCount, BatteryTotal} = chartData;\n            // console.log(\"typeof BatteryCap\", typeof BatteryCap);\n            // console.log(\"typeof BatteryTotal\", typeof BatteryTotal);\n            // console.log(\"typeof BatteryCount\", typeof BatteryCount);\n            batteryContent = (\n                <div\n                    style={{\n                        // height: \"100%\"\n                        width: \"41vw\",\n                        height: \"20vw\",\n                        marginRight: \"2vw\"\n                    }}\n                >\n                    <Card\n                        style={{\n                            borderRadius: 8,\n                            //  height: \"22.5rem\"\n                            height: \"100%\"\n                        }}\n                    >\n                        <CardContent style={{width: \"100%\", height: \"100%\"}}>\n                            <div\n                                style={{\n                                    width: \"100%\",\n                                    height: \"100%\",\n                                    display: \"flex\",\n                                    justifyContent: \"space-evenly\",\n                                    alignItems: \"center\"\n                                }}\n                            >\n                                {/*{console.log(\"batteryCap\", BatteryCap)}*/}\n                                <div style={{width: \"16vw\"}}>\n                                    {/* <CircularProgressbarWithChildren\n                    value={BatteryCap===undefined?0:BatteryCap}\n                    text={`${Math.round(BatteryCap===undefined?0:BatteryCap)}W`}\n                    circleRatio={0.5}\n                    strokeWidth={6}\n                    styles={buildStyles({\n                      strokeLinecap: \"round\",\n                      backgroundColor: \"blue\",\n                      // trailColor: \"red\",\n                      pathColor: \"#25A8A8\",\n                      borderBottomColor: \"transparent\"\n                    })}\n                  >\n                  <RadialSeparators\n                      count={66}\n                      style={{\n                        borderRadius: -20,\n                        borderBottomColor: \"transparent\",\n                        background: \"#000\",\n                        width: \"6px\",\n                        // This needs to be equal to props.strokeWidth\n                        height: `${6}%`\n                      }}\n                      />\n                  </CircularProgressbarWithChildren> */}\n                                    <CircularProgressbarWithChildren\n                                        value={\n                                            typeof BatteryCap !== \"number\" ||\n                                            typeof BatteryTotal !== \"number\"\n                                                ? (parseInt(BatteryCap) / parseInt(BatteryTotal)) * 100\n                                                : 0\n                                        }\n                                        // text={`${50}%`}\n                                        strokeWidth={15}\n                                        circleRatio={0.6}\n                                        className=\"CircularProgressbar\"\n                                        styles={buildStyles({\n                                            rotation: 1 / 2 + 1 / 8,\n                                            strokeLinecap: \"butt\",\n                                            trailColor: \"#D3E9EA\",\n                                            pathColor: \"#25A8A8\",\n                                            alignSelf: \"flex-end\"\n                                        })}\n                                    >\n                                        <RadialSeparators\n                                            count={60}\n                                            style={{\n                                                // borderRadius: 5,\n                                                borderBottomColor: \"transparent\",\n                                                background: \"#fff\",\n                                                width: `.45vw`,\n                                                // This needs to be equal to props.strokeWidth\n                                                height: `2.4vw`\n                                            }}\n                                        />\n                                        <div\n                                            style={{\n                                                // padding: \"10px 0 0 0\",\n                                                display: \"flex\",\n                                                flexDirection: \"column\",\n                                                justifyContent: \"center\",\n                                                alignItems: \"center\"\n                                            }}\n                                        >\n                                            <div\n                                                style={{\n                                                    display: \"flex\",\n                                                    alignItems: \"center\",\n                                                    padding: 0,\n                                                    margin: 0\n                                                }}\n                                            >\n                                                <div\n                                                    style={{\n                                                        fontFamily: \"Gotham Rounded Medium\",\n                                                        fontSize: \"3.5vw\",\n                                                        padding: 0,\n                                                        margin: 0\n                                                    }}\n                                                >\n                                                    {Math.round(BatteryCap / 1000)}\n                                                </div>\n                                                <div\n                                                    style={{\n                                                        fontFamily: \"Gotham Rounded Light\",\n                                                        margin: \"2vw 0 0 0\",\n                                                        fontSize: \"0.8vw\",\n                                                        padding: 0\n                                                    }}\n                                                >\n                                                    kW\n                                                </div>\n                                            </div>\n                                            <div\n                                                style={{\n                                                    display: \"flex\",\n                                                    flexDirection: \"column\",\n                                                    justifyContent: \"center\",\n                                                    alignItems: \"center\",\n                                                    padding: 0,\n                                                    margin: 0\n                                                }}\n                                            >\n                                                <div\n                                                    style={{\n                                                        color: \"#83C4C4\",\n                                                        // fontWeight: \"100\",\n                                                        fontSize: \"1.1vw\",\n                                                        fontFamily: \"Gotham Rounded Light\",\n                                                        padding: 0,\n                                                        margin: 0,\n                                                        textTransform: \"uppercase\"\n                                                    }}\n                                                >\n                                                    Available\n                                                </div>\n                                                <div\n                                                    style={{\n                                                        color: \"#83C4C4\",\n                                                        // fontWeight: \"100\",\n                                                        fontFamily: \"Gotham Rounded Light\",\n                                                        padding: 0,\n                                                        margin: 0,\n                                                        fontSize: \"1.1vw\",\n                                                        textTransform: \"uppercase\"\n                                                    }}\n                                                >\n                                                    Power\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </CircularProgressbarWithChildren>\n                                </div>\n                                <div\n                                    style={{\n                                        fontFamily: \"Gotham Rounded Bold\",\n                                        paddingLeft: \"8px\",\n                                        paddingBottom: \"10%\"\n                                    }}\n                                >\n                                    <Typography\n                                        style={{\n                                            fontFamily: \"Gotham Rounded Medium\",\n                                            fontSize: \"2.2vw\"\n                                        }}\n                                    >\n                                        Your Virtual\n                                    </Typography>\n                                    <Typography\n                                        style={{\n                                            fontFamily: \"Gotham Rounded Medium\",\n                                            fontSize: \"2.2vw\"\n                                        }}\n                                    >\n                                        Power Plant\n                                    </Typography>\n                                    <Typography\n                                        style={{\n                                            fontFamily: \"Gotham Rounded Light\",\n                                            color: \"#828282\",\n                                            fontSize: \"1vw\",\n                                            display: \"inline-block\",\n                                            overflowWrap: \"break-word\"\n                                        }}\n                                    >\n                                        {(BatteryCount == 1) ? `There is currently ${BatteryCount}` : `There are currently ${BatteryCount}`}\n                                        <Typography\n                                            style={{\n                                                display: \"table\",\n                                                fontFamily: \"Gotham Rounded Light\",\n                                                color: \"#828282\",\n                                                fontSize: \"1vw\"\n                                            }}\n                                        >{(BatteryCount == 1) ? `home in your fleet` : `homes in your fleet`}\n                                        </Typography>\n                                    </Typography>\n                                </div>\n                            </div>\n                        </CardContent>\n                    </Card>\n                </div>\n            );\n\n            chartContent = (\n                <div\n                    style={{\n                        padding: \"3% 0\",\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\"\n                    }}\n                >\n                    <Card style={{borderRadius: 8, width: \"84vw\"}}>\n                        <CardContent style={{width: \"100%\"}}>\n                            <div\n                                style={{\n                                    display: \"flex\",\n                                    marginBottom: \"6px\",\n                                    justifyContent: \"space-between\",\n                                    alignItems: \"center\"\n                                }}\n                            >\n                                <Typography\n                                    style={{\n                                        padding: \"0 0 3% 8%\",\n                                        color: \"#83C4C4\",\n                                        fontSize: \"1.3vw\",\n                                        fontFamily: \"Gotham Rounded Light\"\n                                    }}\n                                >\n                                    {\"Power\".toUpperCase()}\n                                </Typography>\n                                <div\n                                    style={{\n                                        display: \"flex\",\n                                        justifyContent: \"space-evenly\",\n                                        alignItems: \"center\",\n                                        alignSelf: \"flex-end\"\n                                    }}\n                                >\n                                    <div\n                                        style={{\n                                            display: \"flex\",\n                                            paddingRight: \"2vw\",\n                                            justifyContent: \"center\",\n                                            alignItems: \"center\"\n                                        }}\n                                    >\n                                        <div\n                                            style={{\n                                                backgroundColor: \"#25A8A8\",\n                                                width: \"1vw\",\n                                                height: \"1vw\",\n                                                borderRadius: 50\n                                            }}\n                                        >\n                                            &nbsp;\n                                        </div>\n                                        <Typography\n                                            style={{\n                                                fontSize: \"1.5vw\",\n                                                fontFamily: \"Gotham Rounded Light\",\n                                                color: \"#828282\"\n                                            }}\n                                        >\n                                            Available Power\n                                        </Typography>\n                                    </div>\n                                    <div\n                                        style={{\n                                            display: \"flex\",\n                                            justifyContent: \"center\",\n                                            alignItems: \"center\"\n                                        }}\n                                    >\n                                        <div\n                                            style={{\n                                                backgroundColor: \"#B5D145\",\n                                                width: \"1vw\",\n                                                height: \"1vw\",\n                                                borderRadius: 40\n                                            }}\n                                        >\n                                            &nbsp;\n                                        </div>\n                                        <Typography\n                                            style={{\n                                                fontSize: \"1.5vw\",\n                                                fontFamily: \"Gotham Rounded Light\",\n                                                color: \"#828282\",\n                                                paddingRight: \"28px\"\n                                            }}\n                                        >\n                                            Net Grid Power\n                                        </Typography>\n                                    </div>\n                                </div>\n                            </div>\n                            <ChartJS\n                                charge={chartData.NetToGrid}\n                                time={chartData.Time}\n                                availablePower={chartData.AvailablePower}\n                                netInGrid={chartData.NetToGrid}\n                            />\n                        </CardContent>\n                    </Card>\n                </div>\n            );\n        }\n\n        if (events.length > 0) {\n            upcomingEventsContent =\n                events.length > 0 ? (\n                    events.map(event => {\n                        // console.log(\"filter api what\", new Date(event.date));\n\n                        return (\n                            <div\n                                style={\n                                    {\n                                        // padding: \"1% 0\"\n                                    }\n                                }\n                            >\n                                <div\n                                    style={{\n                                        display: \"flex\",\n                                        justifyContent: \"space-between\",\n                                        alignItems: \"center\"\n                                    }}\n                                >\n                                    <Typography\n                                        style={{\n                                            whiteSpace: \"nowrap\",\n                                            fontFamily: \"Gotham Rounded Medium\",\n                                            fontSize: \"1.3vw\"\n                                        }}\n                                    >\n                                        {event.groupId}\n                                    </Typography>\n                                    <div style={{display: \"flex\"}}>\n                                        <Typography\n                                            style={{\n                                                paddingRight: \"1px\",\n                                                fontFamily: \"Gotham Rounded Medium\",\n                                                fontSize: \"1.3vw\"\n                                            }}\n                                        >\n                                            {`${parseInt(event.power) / 1000} kW`}\n                                        </Typography>\n                                    </div>\n                                </div>\n                                <div\n                                    style={{\n                                        display: \"flex\",\n                                        padding: \"1% 0\",\n                                        justifyContent: \"space-between\",\n                                        alignItems: \"center\"\n                                    }}\n                                >\n                                    <div\n                                        style={{\n                                            fontFamily: \"Gotham Rounded Medium\",\n                                            color: \"#828282\",\n                                            fontSize: \"1vw\"\n                                        }}\n                                    >\n                                        {moment(event.date).format(\"DD/MM/YYYY\")}\n                                    </div>\n                                    <div\n                                        style={{\n                                            fontFamily: \"Gotham Rounded Medium\",\n                                            color: \"#828282\",\n                                            fontSize: \"1vw\"\n                                        }}\n                                    >{`${moment(event.startTime, \"HH:mm:ss\").format(\n                                        \"HH:mm\"\n                                    )}-${moment(event.endTime, \"HH:mm:ss\").format(\n                                        \"HH:mm\"\n                                    )}`}</div>\n                                </div>\n                            </div>\n                        );\n                    })\n                ) : (\n                    <Typography>No Upcoming Events!</Typography>\n                );\n        }\n\n        return (\n            <div\n                style={{\n                    paddingLeft: \"4vw\"\n                }}\n            >\n                {loading ? (\n                    <Spinner/>\n                ) : (\n                    <div\n                        style={\n                            {\n                                // width: \"100%\"\n                            }\n                        }\n                    >{console.log(\"user\", user)}\n                        {user.includes(\"admin\") ? (\n                            <div\n                                style={{\n                                    display: \"flex\",\n                                    padding: \"1% 0 1% 5%\",\n                                    justifyContent: \"flex-start\",\n                                    alignItems: \"center\"\n                                }}\n                            >\n                                <div\n                                    style={{\n                                        width: \"30%\",\n                                        paddingRight: \"3%\",\n                                        color: \"#BDBDBD\",\n                                        letterSpacing: \"1.5px\",\n                                        fontFamily: \"Gotham Rounded Medium\"\n                                    }}\n                                >\n                                    <div style={{fontSize: \"1vw\"}}>\n                                        {\"Location\".toUpperCase()}\n                                    </div>\n                                    <Select\n                                        onChange={e => this.onChangeLocation(e, \"location\")}\n                                        value={location}\n                                        styles={\n                                            customStyles\n                                        }\n                                        placeholder=\"All States\"\n                                        options={\n                                            locations\n                                                ? locations.map(location => {\n                                                    console.log(\"location all state\", location)\n                                                    return {\n                                                        value: location.name,\n                                                        label: location.name,\n                                                        id: location.id\n                                                    };\n                                                })\n                                                : []\n                                        }\n                                    />\n                                </div>\n                                {/* <div style={{ width: \"30%\" }}>\n            <h5>Network Provider</h5>\n            <Select\n              onChange={() => {}}\n              value=\"networkProvider\"\n              options={[\n                { value: \"ausgrid\", label: \"Ausgrid\" }\n              ]}\n            />\n          </div> */}\n                            </div>\n                        ) : (\n                            \"\"\n                        )}\n                        {/* {user.includes(\"admin\") ? (\n              <div style={{width:'100%'}}>\n              <div\n                style={{\n                  backgroundColor:'red',\n                  width: \"100%\",\n                  display: \"flex\",\n                  justifyContent:'flex-end',\n                  padding: \"3% 0 0 3%\"\n                }}\n              >\n\n                <Fab\n                  style={{\n                    alignSelf:'flex-end',\n                    backgroundColor: \"#25A8A8\"\n                  }}\n                  onClick={() => this.setState({ openAddEvent: true })}\n                >\n                  <Add style={{ color: \"#fff\" }} />\n                </Fab>\n              </div>\n            </div>\n            ) : (\n              \"\"\n            )} */}\n                        <div\n                            style={{\n                                // position:'relative',\n                                display: \"flex\",\n                                justifyContent: \"center\",\n\n                                alignItems: \"center\"\n                                // padding: \"3%\",\n                                // width: \"100%\",\n\n                                // height: \"40%\"\n                            }}\n                        >\n                            {batteryContent}\n                            <div\n                                style={{\n                                    width: \"41vw\",\n                                    height: \"20vw\",\n                                    position: \"relative\"\n                                }}\n                            >\n                                {events.length >= 0 ? <Card\n                                    style={{\n                                        overflow: \"auto\",\n                                        height: \"100%\",\n                                        // height: \"22.5rem\",\n                                        // width: \"36rem\",\n                                        borderRadius: 8\n                                        // padding: \"1% 0\",\n                                        // marginLeft: \"27px\"\n                                    }}\n                                >\n                                    <CardContent\n                                        style={{width: \"100%\", height: \"100%\", padding: \"2vw\"}}\n                                    >\n                                        <Typography\n                                            style={{\n                                                fontFamily: \"Gotham Rounded Light\",\n                                                color: \"#83C4C4\",\n                                                fontSize: \"1.3vw\",\n                                                textTransform: \"uppercase\"\n                                            }}\n                                            // variant=\"subtitle2\"\n                                        >\n                                            Upcoming Events\n                                        </Typography>\n                                        <div style={{padding: \"2vw 0\"}}>\n                                            {/* <div style={{ padding: \"1% 0\" }}>\n                  <div\n                  style={{\n                    display: \"flex\",\n                      justifyContent: \"space-between\",\n                      alignItems: \"center\"\n                    }}\n                  >\n                  <Typography style={{ whiteSpace: \"nowrap\" }}>\n                    New South Wales - Sydney\n                    </Typography>\n                    <div style={{ display: \"flex\" }}>\n                    <Typography style={{ paddingRight: \"5px\" }}>\n                        1428 kW{\"   \"}\n                        </Typography>\n                      <Typography>\n                      <img src={stockMarketArrowDown} /> -7.6%\n                      </Typography>\n                    </div>\n                  </div>\n                  <LinearProgress\n                  classes={{\n                    bar1Determinate: classes.firstBarColor\n                    }}\n                    style={{ height: 10, borderRadius: 20, color: \"#E84A50\" }}\n                    variant=\"determinate\"\n                    value={86}\n                    />\n                    </div>\n                    <div style={{ padding: \"1% 0\" }}>\n                    <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      alignItems: \"center\"\n                    }}\n                    >\n                  <Typography style={{ whiteSpace: \"nowrap\" }}>\n                  New South Wales - Sydney\n                  </Typography>\n                  <div style={{ display: \"flex\" }}>\n                  <Typography style={{ paddingRight: \"5px\" }}>\n                  1428 kW{\"   \"}\n                  </Typography>\n                  <Typography>\n                  <img src={stockMarketArrowUp} /> 7.6%\n                  </Typography>\n                  </div>\n                  </div>\n                  <LinearProgress\n                  style={{ height: 10, borderRadius: 20 }}\n                  classes={{\n                      bar1Determinate: classes.secondBarColor\n                    }}\n                    variant=\"determinate\"\n                    value={86}\n                    />\n                  </div> */}\n                                            {upcomingEventsContent}\n                                        </div>\n                                    </CardContent>\n                                </Card> : <Typography\n                                    style={{fontSize: '3vw', fontFamily: 'Gotham Rounded Bold', textAlign: 'center'}}>Nothing\n                                    to show!</Typography>}\n                                {user.includes(\"admin\") ? (\n                                    <div\n                                        style={{\n                                            position: events.length > 0 ? \"absolute\" : \"fixed\",\n                                            right: events.length > 0 ? \"-3%\" : \"4%\",\n                                            width: \"4vw\",\n                                            height: \"4vw\",\n                                            top: events.length > 0 ? \"-7%\" : \"90%\",\n                                            zIndex: 1\n                                        }}\n                                    >\n                                        <Fab\n                                            style={{\n                                                width: \"100%\",\n                                                height: \"100%\",\n                                                alignSelf: \"flex-end\",\n                                                backgroundColor: \"#25A8A8\"\n                                            }}\n                                            onClick={() => this.setState({openAddEvent: true})}\n                                        >\n                                            <Add style={{color: \"#fff\", fontSize: \"2vw\"}}/>\n                                        </Fab>\n                                    </div>\n                                ) : (\n                                    \"\"\n                                )}\n                            </div>\n                        </div>\n                        {chartContent}\n                    </div>\n                )}\n                <Dialog\n                    fullWidth\n                    style={{zIndex: 2}}\n                    open={openAddEvent}\n                    onClose={() => this.setState({openAddEvent: false})}\n                >\n                    <DialogContent style={{height: \"28vw\"}}>\n                        <div\n                            style={{\n                                width: \"100%\",\n                                height: \"100%\",\n                                display: \"flex\",\n                                flexDirection: \"column\",\n                                // fontFamily: \"Gotham Rounded Medium\",\n                                alignItems: \"center\",\n                                zIndex: 3\n                            }}\n                        >\n                            <div\n                                style={{\n                                    width: \"80%\",\n                                    display: \"flex\",\n                                    flexDirection: \"column\",\n                                    justifyContent: \"space-evenly\",\n                                    // fontFamily: \"Gotham Rounded Medium\",\n                                    height: \"100%\"\n                                }}\n                            >\n                                <Typography\n                                    style={{\n                                        color: \"#25A8A8\",\n                                        fontFamily: \"Gotham Rounded Light\"\n                                    }}\n                                >\n                                    {\"Add event\".toUpperCase()}\n                                </Typography>\n                                <div\n                                    style={{\n                                        display: \"flex\",\n                                        flexDirection: \"row\",\n                                        width: \"100%\",\n                                        justifyContent: \"space-between\"\n                                    }}\n                                >\n                                    <Typography style={{\n                                        color: \"#333\",\n                                        fontFamily: \"Gotham Rounded Light\"\n                                    }}>Location</Typography>\n                                    <div style={{width: \"70%\"}}>\n                                        <Select\n                                            onChange={e => this.onChange(e, \"location\", false)}\n                                            value={location}\n                                            // menuPortalTarget={document.body}\n                                            styles={{\n                                                menuPortal: styles => ({...styles, zIndex: 4})\n                                            },customStyles}\n                                            placeholder=\"All States\"\n                                            options={\n                                                locations\n                                                    ? locations.map(location => {\n                                                        // console.log(\"location all state\",location)\n                                                        return {\n                                                            value: location.name,\n                                                            label: location.name,\n                                                            id: location.id,\n                                                            maxPower: location.maxPower / 1000\n                                                        };\n                                                    })\n                                                    : []\n                                            }\n                                        />\n                                    </div>\n                                </div>\n                                <div\n                                    style={{\n                                        display: \"flex\",\n                                        flexDirection: \"row\",\n                                        width: \"100%\",\n                                        justifyContent: \"space-between\"\n                                    }}\n                                >\n                                    <Typography style={{\n                                        color: \"#333\",\n                                        fontFamily: \"Gotham Rounded Light\"\n                                    }}>Date</Typography>\n                                    <div style={{width: \"70%\"}}>\n                                        {/* <Select\n                      menuPortalTarget={document.body}\n                      styles={{\n                        menuPortal: styles => ({ ...styles, zIndex: 4 })\n                      }}\n                      options={[\n                        { value: \"2019-09-10\", label: \"10/09/2019\" },\n                        { value: \"2019-09-11\", label: \"11/09/2019\" },\n                        { value: \"2019-09-12\", label: \"12/09/2019\" },\n                        { value: \"2019-09-13\", label: \"13/09/2019\" },\n                        { value: \"2019-09-14\", label: \"14/09/2019\" },\n                        { value: \"2019-09-15\", label: \"15/09/2019\" },\n                        { value: \"2019-09-16\", label: \"16/09/2019\" },\n                        { value: \"2019-09-17\", label: \"17/09/2019\" },\n                        { value: \"2019-09-18\", label: \"18/09/2019\" },\n                        { value: \"2019-09-19\", label: \"19/09/2019\" },\n                        { value: \"2019-09-20\", label: \"20/09/2019\" },\n                        { value: \"2019-09-21\", label: \"21/09/2019\" },\n                        { value: \"2019-09-22\", label: \"22/09/2019\" },\n                        { value: \"2019-09-23\", label: \"23/09/2019\" },\n                        { value: \"2019-09-24\", label: \"24/09/2019\" },\n                        { value: \"2019-09-26\", label: \"25/09/2019\" },\n                        { value: \"2019-09-27\", label: \"26/09/2019\" },\n                        { value: \"2019-09-28\", label: \"27/09/2019\" },\n                        { value: \"2019-09-29\", label: \"28/09/2019\" },\n                        { value: \"2019-09-30\", label: \"29/09/2019\" },\n                        { value: \"2019-09-31\", label: \"30/09/2019\" }\n                      ]}\n                      onChange={e => this.onChange(e, \"date\",false)}\n                      value={date}\n                    /> */}\n                                        <ThemeProvider theme={muiTheme}>\n\n                                            <MuiPickersUtilsProvider\n                                                className=\"MuiOutlinedInput-input\"\n                                                utils={MomentUtils}\n                                            >\n                                                <DatePicker\n                                                    disableToolbar\n                                                    inputVariant=\"outlined\"\n                                                    style={{fontFamily: \"Gotham Rounded Light\"}}\n                                                    placeholder=\"Date\"\n                                                    // minDate={new Date()}\n                                                    // minDateMessage=\"Date should not be in the past!\"\n                                                    format=\"DD/MM/YY\"\n                                                    onChange={e => this.onChange(e, \"date\", false)}\n                                                    value={date}\n                                                />\n                                            </MuiPickersUtilsProvider>\n                                        </ThemeProvider>\n                                    </div>\n                                </div>\n                                <div\n                                    style={{\n                                        display: \"flex\",\n                                        flexDirection: \"row\",\n                                        width: \"100%\",\n                                        alignItems: \"center\",\n                                        justifyContent: \"space-between\"\n                                    }}\n                                >\n                                    <Typography style={{\n                                        color: \"#333\",\n                                        fontFamily: \"Gotham Rounded Light\"\n                                    }}>Time</Typography>\n                                    <div style={{\n                                        display: \"flex\", width: \"70%\",\n                                        alignItems: \"center\"\n                                    }}>\n                                        <div style={{width: \"40%\"}}>\n                                            {/* <Select\n                        menuPortalTarget={document.body}\n                        styles={{\n                          menuPortal: styles => ({ ...styles, zIndex: 4 })\n                        }}\n                        value={from}\n                        onChange={e => this.onChange(e, \"from\", false)}\n                        options={[\n                          { value: \"01\", label: \"1 am\" },\n                          { value: \"02\", label: \"2 am\" },\n                          { value: \"03\", label: \"3 am\" },\n                          { value: \"04\", label: \"4 am\" },\n                          { value: \"05\", label: \"5 am\" },\n                          { value: \"06\", label: \"6 am\" },\n                          { value: \"07\", label: \"7 am\" },\n                          { value: \"08\", label: \"8 am\" },\n                          { value: \"09\", label: \"9 am\" },\n                          { value: \"10\", label: \"10 am\" },\n                          { value: \"11\", label: \"11 am\" },\n                          { value: \"12\", label: \"12 pm\" },\n                          { value: \"13\", label: \"1 pm\" },\n                          { value: \"14\", label: \"2 pm\" },\n                          { value: \"15\", label: \"3 pm\" },\n                          { value: \"16\", label: \"4 pm\" },\n                          { value: \"17\", label: \"5 pm\" },\n                          { value: \"18\", label: \"6 pm\" },\n                          { value: \"19\", label: \"7 pm\" },\n                          { value: \"20\", label: \"8 pm\" },\n                          { value: \"21\", label: \"9 pm\" },\n                          { value: \"22\", label: \"10 pm\" },\n                          { value: \"23\", label: \"11 pm\" },\n                          { value: \"24\", label: \"12 pm\" }\n                        ]}\n                      /> */}\n\n                                            {/* <MuiPickersUtilsProvider utils={MomentUtils}>\n                        <TimePicker\n                          inputVariant=\"outlined\"\n                          clearable\n                          ampm={false}\n                          //  label=\"24 hours\"\n                          value={from}\n                          onChange={e => this.onChange(e, \"from\", false)}\n                        />\n                      </MuiPickersUtilsProvider> */}\n                                            <TextField\n                                                type=\"time\"\n                                                inputProps={{\n                                                    step: '1800'\n                                                }}\n                                                variant=\"outlined\"\n                                                value={from === null ? \"02:00\" : from}\n                                                style={{fontFamily: \"Gotham Rounded Medium\"}}\n                                                placeholder={\"Enter as 22:15\"}\n                                                onChange={e => this.setState({from: e.target.value})}\n                                            />\n\n                                        </div>\n                                        <Typography style={{\n                                            color: \"#333\",\n                                            width: \"20%\",\n                                            textAlign: \"center\",\n                                            fontFamily: \"Gotham Rounded Light\"\n                                        }}>\n                                            to\n                                        </Typography>\n                                        <div style={{width: \"40%\"}}>\n                                            {/* <Select\n                        onChange={e => this.onChange(e, \"to\", false)}\n                        menuPortalTarget={document.body}\n                        styles={{\n                          menuPortal: styles => ({ ...styles, zIndex: 4 })\n                        }}\n                        options={[\n                          { value: \"01\", label: \"1 am\" },\n                          { value: \"02\", label: \"2 am\" },\n                          { value: \"03\", label: \"3 am\" },\n                          { value: \"04\", label: \"4 am\" },\n                          { value: \"05\", label: \"5 am\" },\n                          { value: \"06\", label: \"6 am\" },\n                          { value: \"07\", label: \"7 am\" },\n                          { value: \"08\", label: \"8 am\" },\n                          { value: \"09\", label: \"9 am\" },\n                          { value: \"10\", label: \"10 am\" },\n                          { value: \"11\", label: \"11 am\" },\n                          { value: \"12\", label: \"12 pm\" },\n                          { value: \"13\", label: \"1 pm\" },\n                          { value: \"14\", label: \"2 pm\" },\n                          { value: \"15\", label: \"3 pm\" },\n                          { value: \"16\", label: \"4 pm\" },\n                          { value: \"17\", label: \"5 pm\" },\n                          { value: \"18\", label: \"6 pm\" },\n                          { value: \"19\", label: \"7 pm\" },\n                          { value: \"20\", label: \"8 pm\" },\n                          { value: \"21\", label: \"9 pm\" },\n                          { value: \"22\", label: \"10 pm\" },\n                          { value: \"23\", label: \"11 pm\" },\n                          { value: \"24\", label: \"12 pm\" }\n                        ]}\n                        value={to}\n                      /> */}\n                                            {/* <MuiPickersUtilsProvider utils={MomentUtils}>\n                        <TimePicker\n                          inputVariant=\"outlined\"\n                          clearable\n                          ampm={false}\n                          //  label=\"24 hours\"\n                          value={to}\n                          onChange={e => this.onChange(e, \"to\", false)}\n                        />\n                      </MuiPickersUtilsProvider> */}\n                                            <TextField\n                                                type=\"time\"\n                                                inputProps={{\n                                                    step: '1800'\n                                                }}\n                                                variant=\"outlined\"\n                                                value={to === null ? \"04:00\" : to}\n                                                style={{fontFamily: \"Gotham Rounded Light\"}}\n                                                placeholder={\"04:00\"}\n                                                onChange={e => this.setState({to: e.target.value})}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div\n                                    style={{\n                                        display: \"flex\",\n                                        flexDirection: \"row\",\n                                        width: \"100%\",\n                                        justifyContent: \"space-between\"\n                                    }}\n                                >\n                                    <Typography style={{\n                                        color: \"#333\",\n                                        fontFamily: \"Gotham Rounded Light\"\n                                    }}>Power</Typography>\n                                    <Typography style={{\n                                        color: \"#333\",\n                                        fontFamily: \"Gotham Rounded Light\"\n                                    }}>{`${power} kW`}</Typography>\n                                </div>\n                                <Slider\n                                    value={power}\n                                    max={location ? location.maxPower : 100}\n                                    aria-label=\"custom thumb label\"\n                                    onChange={(e, value) => {\n                                        // console.log(\"e\", e);\n                                        // console.log(\"value\", value);\n                                        return this.setState({power: value});\n                                    }}\n                                    classes={{\n                                        thumb: classes.thumb,\n                                        track: classes.track\n                                    }}\n                                />\n                                <div\n                                    style={{\n                                        display: \"flex\",\n                                        flexDirection: \"column\",\n                                        justifyContent: \"center\",\n                                        alignItems: \"center\"\n                                    }}\n                                >\n                                    {validationText ? (\n                                        <Typography style={{color: \"red\"}}>\n                                            {validationText}\n                                        </Typography>\n                                    ) : null}\n                                    {error ? (\n                                        <Typography style={{color: \"red\"}}>\n                                            {error.value}\n                                        </Typography>\n                                    ) : null}\n                                </div>\n                                <div\n                                    style={{\n                                        display: \"flex\",\n                                        justifyContent: \"center\",\n                                        alignItems: \"center\",\n                                        width: \"100%\"\n                                    }}\n                                >\n                                    <Button\n                                        onClick={this.onClickSave}\n                                        variant=\"contained\"\n                                        style={{\n                                            color: \"#fff\",\n                                            textTransform: \"none\",\n                                            backgroundColor: \"#25A8A8\",\n                                            width: \"30%\"\n                                        }}\n                                    >\n                                        Save\n                                    </Button>\n                                </div>\n                            </div>\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nconst styles = {\n    firstBarColor: {\n        backgroundColor: \"#E84A50\"\n    },\n    secondBarColor: {\n        backgroundColor: \"#B5D145\"\n    },\n    dateInput: {\n        padding: \"1%\"\n    }\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default withStyles(styles)(\n    connect(\n        mapStateToProps,\n        {}\n    )(Dashboard)\n);\n\n{\n    /*\n     */\n}\n","import React, { Component } from \"react\";\nimport map from \"../../assets/map.svg\";\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Button,\n  withStyles,\n  TextField\n} from \"@material-ui/core\";\nimport logo from \"../../assets/shinehub-logo.svg\";\nimport axios from 'axios';\nimport {connect} from 'react-redux';\nimport {login} from '../../actions/authActions';\nconst md5 = require(\"md5\");\n\n\nclass Login extends Component {\n  state = {\n    email:'',\n    password:''\n  };\n  \n  componentDidMount() {\n  \n  }\n\n  componentWillReceiveProps(nextProps){\n    if(nextProps.auth.error){\n      console.log('nextProps.auth.error',nextProps.auth.error);\n    }\n  }\n\n\n  onChange=(e)=>{\n\n    this.setState({[e.target.name]:e.target.value});\n\n  }\n\n  onSignIn=(e)=>{\n    e.preventDefault();\n\n    const {email,password}=this.state;\n\n    this.props.login(email,password,this.props.history,md5);\n\n  }\n\n  render() {\n    const { classes } = this.props;\n    const {error}=this.props.auth;\n    const {email,password}=this.state;\n    \n    return (\n      <div\n        style={{\n          backgroundColor: \"#E5E5E5\",\n          display: \"flex\",\n          height: \"100vh\",\n          width: \"100vw\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        }}\n      >\n        <Card style={{ height: \"100%\", width: \"100%\" }}>\n          <CardContent style={{ display: \"flex\", height: \"100%\", padding: 0 }}>\n            <div\n              style={{\n                padding: \"5%\",\n                height: \"100%\",\n                width: \"50%\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\"\n              }}\n            >\n              <div style={{ width: \"60%\" }}>\n                <div>\n                  <img src={logo} />\n                </div>\n                <div\n                  style={{\n                    paddingTop: \"15%\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"space-around\"\n                  }}\n                >\n                  <Typography\n                    variant=\"h5\"\n                    style={{ fontFamily:'Gotham Rounded Bold',fontWeight: \"bolder\", color: \"#2E384D\" }}\n                  >\n                    ShineHub Virtual\n                  </Typography>\n                  <Typography\n                    variant=\"h5\"\n                    style={{ fontFamily:'Gotham Rounded Bold',fontWeight: \"bolder\", color: \"#2E384D\" }}\n                  >\n                    Power Plant\n                  </Typography>\n                  <Typography\n                    style={{\n                      color: \"#8798AD\",\n                      fontSize: \"87%\",\n                      paddingBottom: \"7%\",\n                      fontFamily:'Gotham Rounded Medium'\n                    }}\n                  >\n                    Login below to proceed\n                  </Typography>\n                  {Object.keys(error).length>0?\n                <Typography\n                style={{\n                  color: \"red\",\n                  fontSize: \"87%\",\n                  paddingBottom: \"7%\"\n                }}\n              >\n                {error.value}\n              </Typography>\n            :''  \n            }\n\n                  <Typography\n                    style={{\n                      fontSize: \"70%\",\n                      color: \"#BDBDBD\",\n                      letterSpacing: \"1.12px\",\n                      fontWeight: \"600\",\n                      fontFamily:'Gotham Rounded Bold'\n                    }}\n                    >\n                    {\"Email Address\".toUpperCase()}\n                  </Typography>\n                          <form style={{width:'100%'}} noValidate onSubmit={this.onSignIn}>\n                  <TextField\n                  name=\"email\"\n                  style={{\n                    width:'100%',\n                    paddingTop:'2%',\n                    fontFamily:'Gotham Rounded Bold'\n                  }}\n                    value={email}\n                    onChange={this.onChange}\n                    variant=\"outlined\"\n                    inputProps={{\n                      style: {\n                        height: \"1px\",\n                        margin: 0,\n                        backgroundColor: \"rgba(224,231,255,0.2)\",\n                        fontFamily:'Gotham Rounded Bold'\n                        // padding:0\n                      }\n                    }}\n                  />\n           </form>\n                  {/* <input style={{height:'22px',borderRadius:4,borderWidth:1,borderColor:'rgb(224,231,255)',backgroundColor:'rgba(224,231,255,0.2)'}}/> */}\n                  <div\n                    style={{\n                      paddingTop: \"6%\",\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      alignItems: \"center\"\n                    }}\n                    >\n                    <Typography\n                      style={{\n                        fontSize: \"70%\",\n                        color: \"#BDBDBD\",\n                        letterSpacing: \"1.12px\",\n                        fontWeight: \"600\",\n                        fontFamily:'Gotham Rounded Bold'\n                      }}\n                    >\n                      {\"Password\".toUpperCase()}\n                    </Typography>\n                    <Typography\n                      style={{\n                        fontSize: \"70%\",\n                        color: \"#BDBDBD\",\n                        letterSpacing: \"1.12px\",\n                        fontWeight: \"600\",\n                        fontFamily:'Gotham Rounded Bold'\n                      }}\n                    >\n                      {\"Forgot Password?\"}\n                    </Typography>\n                  </div>\n                  <form style={{width:'100%'}} onSubmit={this.onSignIn} noValidate >\n                    <TextField\n                  name=\"password\"\n                  type=\"password\"  \n                  style={{\n                    width:'100%',\n                    paddingTop:'2%',\n                    fontFamily:'Gotham Rounded Bold'\n                  }}\n                  value={password}\n                  onChange={this.onChange}\n                  variant=\"outlined\"\n                  inputProps={{\n                    style: {\n                      height: \"1px\",\n                      margin: 0,\n                      backgroundColor: \"rgba(224,231,255,0.2)\",\n                        // padding:0\n                      }\n                    }}\n                    />\n                  <div style={{ width: \"100%\", paddingTop: \"7%\" }}>\n                    <Button\n                      onClick={this.onSignIn}\n                      style={{\n                        backgroundColor: \"#25A8A8\",\n                        width: \"100%\",\n                        color: \"#fff\",\n                        padding: \"4% 0\",\n                        fontFamily:'Gotham Rounded Bold'\n                      }}\n                      variant=\"contained\"\n                      classes={{\n                        label: classes.label\n                      }}\n                      >\n                      Sign in\n                    </Button>\n                  </div>\n                  </form>\n                  {/* <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                      width: \"100%\",\n                      paddingTop: \"3%\"\n                    }}\n                  >\n                    <Typography\n                      style={{\n                        fontSize: \"80%\",\n                        paddingRight: \"1%\",\n                        color: \"#B0BAC9\",\n                        fontWeight: \"500\",\n                        whiteSpace: \"nowrap\",\n                        fontFamily:'Gotham Rounded Bold'\n                      }}\n                    >\n                      Don't have an account?\n                    </Typography>\n                    <Typography\n                      style={{\n                        color: \"#25A8A8\",\n                        cursor: \"pointer\",\n                        fontSize: \"85%\"\n                      }}\n                    >\n                      Sign up\n                    </Typography>\n                  </div> */}\n                </div>\n              </div>\n            </div>\n            <div\n              style={{\n                backgroundImage:`url(${map})`,\n                width: \"50%\",\n                position: \"relative\"\n              }}\n            >\n              <div/>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  label: {\n    textTransform: \"none\"\n  },\n  textField: {\n    height: \"22px\",\n    padding: 0,\n    margin: 0\n  }\n};\n\nconst mapStateToProps=state=>({\n  auth:state.auth\n})\n\nexport default withStyles(styles)(connect(mapStateToProps,{login})(Login));\n","import React, {Component} from \"react\";\nimport {\n    Typography,\n    Table,\n    withStyles,\n    TableHead,\n    TableRow,\n    TableCell,\n    TableBody,\n    Card,\n    CardContent,\n    Slider,\n    Fab,\n    Dialog,\n    DialogContent,\n    Button,\n    DialogTitle,\n    TextField,\n    DialogActions,\n    OutlinedInput\n} from \"@material-ui/core\";\nimport {\n    Add,\n    Money,\n    MoneyOff,\n    AttachMoney,\n    AttachMoneyOutlined\n} from \"@material-ui/icons\";\nimport {connect} from \"react-redux\";\nimport Select from \"react-select\";\nimport SelectPlus from \"react-select\";\nimport \"./reactSelectFix.css\";\nimport Spinner from \"../common/Spinner\";\nimport moment from \"moment\";\nimport {\n    MuiPickersUtilsProvider,\n    DatePicker,\n    TimePicker\n} from \"@material-ui/pickers\";\nimport {createMuiTheme} from \"@material-ui/core\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport MomentUtils from \"@date-io/moment\";\nimport store from \"../../store/store\";\nimport {LOGIN_ERROR} from \"../../actions/types\";\nimport {ThemeProvider} from \"@material-ui/styles\";\nimport {Base64} from \"js-base64\";\n\nconst md5 = require(\"md5\");\n\nconst customStyles = {\n    control: (base, state) => {\n        // console.log('state', state);\n        // console.log('base', base);\n        return {\n            ...base,\n            // borderColor: state.isFocused?'red':'blue',\n            \"&:hover\": {\n                borderColor: state.isFocused ? \"#00008b\" : base.borderColor\n            }\n            // You can also use state.isFocused to conditionally style based on the focus state\n        }\n    },\n    input: (base, state) => {\n\n        // console.log('dropdownIndicator base', base);\n        // console.log('dropdownIndicator state', state);\n        return {\n            ...base,\n            // color:\"blue\"\n            // \"&:hover\":{\n            //   // border:'0.2rem solid green'\n            // },\n            // \"&:visited\":{\n            //   border:'0.2rem solid black'\n            // }\n\n        }\n\n    }\n};\n\n\n\n// const username = 'saraswata';\n// const password = '#abcd123';\nconst muiTheme = createMuiTheme({\n    overrides: {\n        MuiPickersToolbar: {\n            toolbar: {\n                backgroundColor: \"#25A8A8\"\n                // backgroundColor: \"red\"\n            }\n        },\n        MuiPickersCalendarHeader: {\n            switchHeader: {\n                // backgroundColor: lightBlue.A200,\n                // color: \"white\",\n            }\n        },\n        MuiPickersDay: {\n            day: {\n                color: \"#25A8A8\"\n            },\n            daySelected: {\n                backgroundColor: \"#25A8A8\"\n            },\n            dayDisabled: {\n                color: \"#25A8A8\"\n            },\n            current: {\n                color: \"#25A8A8\"\n            }\n        },\n        MuiOutlinedInput: {\n            // input:{\n            //     border:'0.2rem solid black',\n            //     borderRadius:'2px',\n            //     '&$focused':{\n            //       border:'0.2rem solid red',\n            //       borderRadius:'100px'\n            //     }\n            // },\n            // focused:{}\n            root: {\n                position: 'relative',\n                '& $notchedOutline': {\n                    borderColor: 'rgba(0, 0, 0, 0.23)',\n                },\n                '&:hover:not($disabled):not($focused):not($error) $notchedOutline': {\n                    borderColor: '#00008b',\n                    // Reset on touch devices, it doesn't add specificity\n                    '@media (hover: none)': {\n                        borderColor: 'rgba(0, 0, 0, 0.23)',\n                    },\n                },\n                '&$focused $notchedOutline': {\n                    borderColor: '#4A90E2',\n                    borderWidth: 2,\n                },\n            },\n        },\n\n        MuiInputBase: focus => {\n            console.log('focus', focus);\n            return {\n                formControl: {\n                    //   border:\"0.1px solid green\",\n                    //   borderRadius:'4px',\n                    //   // console.log('focus',focus);\n                    //   \"&$focused\":{\n                    //     border:'0.2rem solid red'\n                    //   },\n                    //   \"&:active\":{\n                    //     border:'0.2rem solid orange'\n                    //   }\n                },\n                focused: {}\n            }\n\n        },\n        //  MuiPickersCalendarHeader: {\n        //   switchHeader: {\n        //     backgroundColor: 'red',\n        //     color: \"red\",\n        //   }\n        // },\n        datePicker: {\n            selectColor: 'red',\n            borderColor: 'red',\n            backgroundColor: 'red'\n        },\n        palette: {\n            backgroundColor: 'red'\n        },\n        MuiPickersModal: {\n            dialogAction: {\n                color: \"red\",\n                selectColor: 'red',\n                backgroundColor: 'red'\n            }\n        }\n    }\n});\n\nclass Events extends Component {\n    state = {\n        openAddEvent: false,\n        filterLocation: null,\n        filterDate: null,\n        filterStartPower: 15,\n        filterEndPower: 30,\n        filterStatus: \"\",\n        events: [],\n        showEvents: [],\n        power: 45,\n        locations: [],\n        location: null,\n        date: null,\n        from: null,\n\n        to: null,\n        status: null,\n        loading: true,\n        openPriceDialog: false,\n        price: \"\",\n        touchedPower: false,\n        idPrice: \"\",\n        namePrice: \"\",\n        datePrice: \"\",\n        startTimePrice: \"\",\n        endTimePrice: \"\",\n        hasCompletedPrice: \"\",\n        isEmail: \"\",\n        validationText: \"\"\n    };\n\n    componentDidMount() {\n        const {isAuthenticated,user, userid,username,userpassword} = this.props.auth;\n        const password = userpassword;\n        const userID = userid;\n        // console.log(\"user\", user);\n        Promise.all([\n            fetch(\n                \"https://vppspark.shinehub.com.au:8443/backend-service/event/all/\",\n                {\n                    method: \"GET\",\n                    headers: {\n                        \"Authorization\": \"Basic \" + Base64.encode(`${username}:${password}`),\n                        \"Content-Type\": \"application/json\"\n                    },\n                }\n            ),\n            fetch(\n                \"https://vppspark.shinehub.com.au:8443/backend-service/group/\",\n                {\n                    method: \"GET\",\n                    headers: {\n                        \"Authorization\": \"Basic \" + Base64.encode(`${username}:${password}`),\n                        \"Content-Type\": \"application/json\"\n                    },\n                }\n            )\n        ])\n            .then(res => res.map(value => value.json()))\n            .then(res => {\n                let eventsRes, locationsRes;\n\n                Promise.all([res[0], res[1]]).then(res => {\n                    // console.log(\"reses\", res);\n                    return this.setState({\n                        loading: false,\n                        showEvents: res[0].data,\n                        events: res[0].data,\n                        locations: res[1].data\n                    });\n                });\n            });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // console.log(\"nextProps\", nextProps);\n    }\n\n    onChange = (e, name, filter) => {\n        console.log(\"e\", e);\n\n        switch (name) {\n            case \"location\":\n                return this.setState({location: e, power: e.maxPower}, () => {\n                    if (filter) {\n                        console.log(\"running callback\");\n                        this.onFilterEvents();\n                    }\n                });\n            case \"price\":\n                return this.setState({price: e.target.value}, () => {\n                    if (filter) {\n                        console.log(\"running callback\");\n                        this.onFilterEvents();\n                    }\n                });\n\n            default:\n                return this.setState({[name]: e}, () => {\n                    if (filter) {\n                        console.log(\"running callback\");\n                        this.onFilterEvents();\n                    }\n                });\n        }\n    };\n\n    onClickSave = () => {\n        const {isAuthenticated,user, userid,username,userpassword} = this.props.auth;\n        const password = userpassword;\n        const userID = userid;\n        const {power, location, date, from, to} = this.state;\n\n        if (location === null) {\n            return this.setState({validationText: \"Please enter all details\"});\n        }\n\n        if (date === null) {\n            return this.setState({validationText: \"Please enter all details\"});\n        }\n\n        if (from === null) {\n            return this.setState({validationText: \"Please enter all details\"});\n        }\n\n        if (to === null) {\n            return this.setState({validationText: \"Please enter all details\"});\n        }\n\n        // console.log(\"typeof from\", typeof parseInt(location.id));\n        // console.log(\"typeof from\", typeof parseInt(from));\n        // console.log(\" from\", from);\n        // console.log(\"typeof to\", typeof parseInt(to));\n        // console.log(\"typeof date\", typeof date);\n        // console.log(\"date\", date);\n        // console.log(\"typeof date\", typeof power);\n\n        fetch(\n            \"https://vppspark.shinehub.com.au:8443/backend-service/event/group/\",\n            {\n                method: \"POST\",\n                headers: {\n                    \"Authorization\": \"Basic \" + Base64.encode(`${username}:${password}`),\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    groupId: location.id,\n                    starttime: moment(from, \"HH:mm:ss\").format(\"HH:mm\"),\n                    endtime: moment(to, \"HH:mm:ss\").format(\"HH:mm\"),\n                    date: moment(date).format(\"YYYY-MM-DD\"),\n                    power: power *1000,\n                    eventStatus : 0,\n\n                })\n\n            }\n        )\n            .then(res => res.text())\n            .then(res => {\n                // console.log(\"save\", res);\n\n                if (JSON.parse(res).r !== 1) {\n                    return store.dispatch({\n                        type: LOGIN_ERROR,\n                        payload: {\n                            value:\n                                \"Cannot add this event. Please correct your details and try again!\"\n                        }\n                    });\n                }\n\n                Promise.all([\n                    fetch(\n                        \"https://vppspark.shinehub.com.au:8443/backend-service/event/all/\",\n                        {\n                            method: \"GET\",\n                            headers: {\n                                \"Authorization\": \"Basic \" + Base64.encode(`${username}:${password}`),\n                                \"Content-Type\": \"application/json\"\n                            },\n                        }\n                    ),\n                    fetch(\n                        \"https://vppspark.shinehub.com.au:8443/backend-service/group/\",\n                        {\n                            method: \"GET\",\n                            headers: {\n                                \"Authorization\": \"Basic \" + Base64.encode(`${username}:${password}`),\n                                \"Content-Type\": \"application/json\"\n                            },\n                        }\n                    )\n                ])\n                    .then(res => res.map(value => value.json()))\n                    .then(res => {\n                        let eventsRes, locationsRes;\n\n                        Promise.all([res[0], res[1]]).then(res => {\n                            // console.log(\"reses\", res);\n\n                            return this.setState({\n                                loading: false,\n                                openAddEvent: false,\n                                showEvents: res[0].data,\n                                events: res[0].data,\n                                locations: res[1].data\n                            });\n                        });\n                    });\n            });\n    };\n\n    onClickSavePrice = (id, price) => {\n        const {isAuthenticated,user, userid,username,userpassword} = this.props.auth;\n        const password = userpassword;\n        const userID = userid;\n        const {power, location, date, from, to} = this.state;\n\n        fetch(\n            \"https://monitoring.shinehub.com.au/handler/web/Group/handleEditGroupDischargePrice.php\",\n            {\n                method: \"POST\",\n                body: JSON.stringify({\n                    d: JSON.stringify({\n                        cvs: {\n                            a: id,\n                            p: price\n                        }\n                    })\n                })\n            }\n        )\n            .then(res => res.text())\n            .then(res => {\n                // console.log(\"save\", res);\n                Promise.all([\n                    fetch(\n                        \"https://vppspark.shinehub.com.au:8443/backend-service/event/all/\",\n                        {\n                            method: \"GET\",\n                            headers: {\n                                \"Authorization\": \"Basic \" + Base64.encode(`${username}:${password}`),\n                                \"Content-Type\": \"application/json\"\n                            },\n                        }\n                    ),\n                    fetch(\n                        \"https://vppspark.shinehub.com.au:8443/backend-service/group/\",\n                        {\n                            method: \"GET\",\n                            headers: {\n                                \"Authorization\": \"Basic \" + Base64.encode(`${username}:${password}`),\n                                \"Content-Type\": \"application/json\"\n                            },\n                        }\n                    )\n                ])\n                    .then(res => res.map(value => value.json()))\n                    .then(res => {\n                        let eventsRes, locationsRes;\n\n                        Promise.all([res[0], res[1]]).then(res => {\n                            // console.log(\"reses\", res);\n\n                            return this.setState({\n                                loading: false,\n                                openPriceDialog: false,\n                                showEvents: res[0].data,\n                                events: res[0].data,\n                                locations: res[1].data\n                            });\n                        });\n                    });\n            });\n    };\n\n    onClickSaveAndSendPrice = (id, price) => {\n        const {isAuthenticated,user, userid,username,userpassword} = this.props.auth;\n        const password = userpassword;\n        const userID = userid;\n        const {power, location, date, from, to} = this.state;\n\n        if (window.confirm(\"Are you sure? This cannot be undone!\")) {\n            fetch(\n                \"https://monitoring.shinehub.com.au/handler/web/Group/handleEditPriceSendEmail.php\",\n                {\n                    method: \"POST\",\n                    body: JSON.stringify({\n                        d: JSON.stringify({\n                            cvs: {\n                                a: id,\n                                p: price\n                            }\n                        })\n                    })\n                }\n            )\n                .then(res => res.text())\n                .then(res => {\n                    // console.log(\"save\", res);\n                    Promise.all([\n                        fetch(\n                            \"https://vppspark.shinehub.com.au:8443/backend-service/event/group/all/\",\n                            {\n                                method: \"GET\",\n                                headers: {\n                                    \"Authorization\": \"Basic \" + Base64.encode(`${username}:${password}`),\n                                    \"Content-Type\": \"application/json\"\n                                },\n                            }\n                        ),\n                        fetch(\n                            \"https://vppspark.shinehub.com.au:8443/backend-service/group/\",\n                            {\n                                method: \"GET\",\n                                headers: {\n                                    \"Authorization\": \"Basic \" + Base64.encode(`${username}:${password}`),\n                                    \"Content-Type\": \"application/json\"\n                                },\n                            }\n                        )\n                    ])\n                        .then(res => res.map(value => value.json()))\n                        .then(res => {\n                            let eventsRes, locationsRes;\n                            Promise.all([res[0], res[1]]).then(res => {\n                                // console.log(\"reses\", res);\n\n                                return this.setState({\n                                    loading: false,\n                                    openPriceDialog: false,\n                                    showEvents: res[0].data,\n                                    events: res[0].data,\n                                    locations: res[1].data\n                                });\n                            });\n                        });\n                });\n        }\n\n        return;\n    };\n\n    onClickEvent = event => {\n        this.props.history.push({\n            pathname: \"/edit-event\",\n            state: {\n                event\n            }\n        });\n    };\n\n    onFilterEvents = () => {\n        const {\n            filterLocation,\n            filterDate,\n            filterStartPower,\n            filterEndPower,\n            filterStatus,\n            events,\n            touchedPower\n        } = this.state;\n        // console.log(\"bahar hai\");\n        // console.log(\"filterLocation\", filterLocation);\n        // console.log(\"filterStatus\", filterStatus);\n        // console.log(\"filterDate\", filterDate);\n        // console.log(\"filterStartPower\", filterStartPower);\n        // console.log(\"filterEndPower\", filterEndPower);\n        // console.log('bahar hai');\n\n        const newEvents = events.filter(event => {\n            // console.log('andar hai')\n            // console.log('event',event);\n            // console.log('typeof sysPower',typeof event.sysReDPower);\n            // console.log('sysPower',parseInt(event.sysReDPower)/1000);\n            // console.log('filterStartPower',filterStartPower);\n            // console.log('filterEndPower',filterEndPower);\n            // console.log('filterStatus.value',filterStatus.value);\n            // console.log('date',new Date(event.sysReDDate).getDate()===new Date(filterDate ).getDate())\n            // console.log(\n            //   \"filterEvents\",\n            //   event.groupname === filterLocation.value ||\n            //     new Date(event.sysReDDate).getDate() ===\n            //       new Date(filterDate).getDate() ||\n            //     (parseInt(event.sysReDPower) / 1000 >= filterStartPower ||\n            //       parseInt(event.sysReDPower) / 1000 <= filterEndPower) ||\n            //     event.sysReDIsComplete === filterStatus.value\n            // );\n            // console.log(\"1\", event.groupname === filterLocation.value);\n            // console.log(\n            //   \"2\",\n            //   new Date(event.sysReDDate).getDate() === new Date(filterDate).getDate()\n            // );\n            // console.log(\n            //   \"3\",\n            //   parseInt(event.sysReDPower) / 1000 >= filterStartPower ||\n            //     parseInt(event.sysReDPower) / 1000 <= filterEndPower\n            // );\n            // console.log(\"4\", event.sysReDIsComplete === filterStatus.value);\n\n            // console.log('filterDate.value',new Date(filterDate));\n            // console.log('event.sysReDDate',new Date(event.sysReDDate));\n            // return (\n            //   event.groupname === filterLocation.value ||\n            //   new Date(event.sysReDDate).getDate() ===\n            //     new Date(filterDate).getDate() ||\n            //   (parseInt(event.sysReDPower) / 1000 >= filterStartPower ||\n            //     parseInt(event.sysReDPower) / 1000 <= filterEndPower) ||\n            //   event.sysReDIsComplete === filterStatus.value\n            // );\n\n            // if (filterLocation && event.groupname === filterLocation.value) {\n            //   console.log(\"loc\");\n            //   if (\n            //     filterDate &&\n            //     new Date(event.sysReDDate).getDate() ===\n            //       new Date(filterDate._d).getDate()\n            //   ) {\n            //     console.log(\"date\");\n            //     console.log(\n            //       \"date\",\n            //       filterDate._d &&\n            //         new Date(event.sysReDDate).getDate() ===\n            //           new Date(filterDate._d).getDate()\n            //     );\n            //     console.log(\"filterDate\", filterDate._d);\n            //     console.log(\n            //       `${new Date(event.sysReDDate).getDate()} ===${new Date(\n            //         filterDate._d\n            //       ).getDate()}`,\n            //       new Date(event.sysReDDate).getDate() ===\n            //         new Date(filterDate._d).getDate()\n            //     );\n\n            //     if (\n            //       filterStartPower &&\n            //       parseInt(event.sysReDPower) / 1000 >= filterStartPower\n            //     ) {\n            //       console.log(\"power\");\n            //       if (\n            //         filterEndPower &&\n            //         parseInt(event.sysReDPower) / 1000 <= filterEndPower\n            //       ) {\n            //         console.log(\"end pow\");\n            //         if (\n            //           filterStatus &&\n            //           event.sysReDIsComplete === filterStatus.value\n            //         ) {\n            //           console.log(\"status\");\n\n            //           return (\n            //             new Date(event.sysReDDate).getDate() ===\n            //               new Date(filterDate._d).getDate() &&\n            //             event.groupname === filterLocation.value &&\n            //             filterStartPower &&\n            //             parseInt(event.sysReDPower) / 1000 >= filterStartPower &&\n            //             parseInt(event.sysReDPower) / 1000 <= filterEndPower &&\n            //             event.sysReDIsComplete === filterStatus.value\n            //           );\n            //         }\n\n            //         return (\n            //           new Date(event.sysReDDate).getDate() ===\n            //             new Date(filterDate._d).getDate() &&\n            //           event.groupname === filterLocation.value &&\n            //           filterStartPower &&\n            //           parseInt(event.sysReDPower) / 1000 >= filterStartPower &&\n            //           parseInt(event.sysReDPower) / 1000 <= filterEndPower\n            //         );\n            //       }\n\n            //       return (\n            //         new Date(event.sysReDDate).getDate() ===\n            //           new Date(filterDate._d).getDate() &&\n            //         event.groupname === filterLocation.value &&\n            //         filterStartPower &&\n            //         parseInt(event.sysReDPower) / 1000 >= filterStartPower\n            //       );\n            //     }\n\n            //     return (\n            //       new Date(event.sysReDDate).getDate() ===\n            //         new Date(filterDate._d).getDate() &&\n            //       event.groupname === filterLocation.value\n            //     );\n            //   }\n\n            //   // console.log('event.groupname',event.groupname);\n            //   // console.log('filterLocation.value',filterLocation.value);\n\n            //   return event.groupname === filterLocation.value;\n            // }\n            // console.log(\"filterDate\", new Date(event.sysReDDate).getDate());\n            //Daniel changed 07/10\n            // if(filterLocation){\n            //   if(filterDate){\n            //\n            //     if(touchedPower){\n            //       // console.log('powerTime',powerTime)\n            //       console.log('event.sysReDPower',event.sysReDPower);\n            //       console.log('filterStartPower',filterStartPower);\n            //\n            //       if(filterStatus){\n            //         console.log('filterStatus',typeof filterStatus.value);\n            //         console.log('sysReDIsComplete',typeof event.sysReDIsComplete);\n            //         return filterLocation.value===event.groupname && new Date(filterDate._d).getDate()===new Date(event.sysReDDate).getDate() && filterStartPower<=(parseInt(event.sysReDPower)/1000) && filterEndPower>=(parseInt(event.sysReDPower)/1000) &&  filterStatus.value===event.sysReDIsComplete;\n            //       }\n            //\n            //       return filterLocation.value===event.groupname && new Date(filterDate._d).getDate()===new Date(event.sysReDDate).getDate() && filterStartPower<=(parseInt(event.sysReDPower)/1000) && filterEndPower>=(parseInt(event.sysReDPower)/1000);\n            //     }\n            //\n            //\n            //     return filterLocation.value===event.groupname && new Date(filterDate._d).getDate()===new Date(event.sysReDDate).getDate()\n            //\n            //   }\n            //   return event.groupname===filterLocation.value\n            // }\n\n            event.availablepower = event.power\n            event.groupname = event.groupname\n            event.sysReDCompVal = event.compval\n            event.sysReDControlMode = ''\n            event.sysReDCreatTime = event.createdTime\n            event.sysReDDaily = ''\n            event.sysReDDate = event.date\n            event.sysReDEndCap = event.endCap\n            event.sysReDEstGen = event.estgen\n            event.sysReDEventStatus = event.eventstatus\n            event.sysReDGroupID = event.groupId\n            event.sysReDId = 'eventId'\n            event.sysReDIsComplete = event.isComplete\n            event.sysReDIsEmail = event.isemail\n            event.sysReDIsPrice = event.isprice\n            event.sysReDIsStart = event.isStart\n            event.sysReDIsValid = 1\n            event.sysReDMode = ''\n            event.sysReDNeedCharge = 0\n            event.sysReDPower = event.power\n            event.sysReDPrice = event.power.price\n            event.sysReDSOC = 10\n            event.sysReDStartCap = event.startBattery\n            event.sysReDStartTime = event.startTime\n            event.sysReDEndTime = event.endTime\n            event.sysReDStatus = \"1\"\n            event.sysReDTargetCap = event.finalBattery\n            if (filterLocation) {\n                if (filterDate) {\n                    if (touchedPower) {\n                        if (filterStatus) {\n                            return (\n                                filterLocation.value === event.groupname &&\n                                new Date(filterDate._d).getDate() ===\n                                new Date(event.sysReDDate).getDate() &&\n                                filterStartPower <= parseInt(event.sysReDPower) / 1000 &&\n                                filterEndPower >= parseInt(event.sysReDPower) / 1000 &&\n                                filterStatus.value === event.sysReDIsComplete\n                            );\n                        } else {\n                            return (\n                                filterLocation.value === event.groupname &&\n                                new Date(filterDate._d).getDate() ===\n                                new Date(event.sysReDDate).getDate() &&\n                                filterStartPower <= parseInt(event.sysReDPower) / 1000 &&\n                                filterEndPower >= parseInt(event.sysReDPower) / 1000\n                            );\n                        }\n                    } else {\n                        if (filterStatus) {\n                            return (\n                                filterLocation.value === event.groupname &&\n                                new Date(filterDate._d).getDate() ===\n                                new Date(event.sysReDDate).getDate() &&\n                                filterStatus.value === event.sysReDIsComplete\n                            );\n                        } else {\n                            return (\n                                filterLocation.value === event.groupname &&\n                                new Date(filterDate._d).getDate() ===\n                                new Date(event.sysReDDate).getDate()\n                            );\n                        }\n                    }\n                } else {\n                    if (touchedPower) {\n                        if (filterStatus) {\n                            return (\n                                filterLocation.value === event.groupname &&\n                                filterStartPower <= parseInt(event.sysReDPower) / 1000 &&\n                                filterEndPower >= parseInt(event.sysReDPower) / 1000 &&\n                                filterStatus.value === event.sysReDIsComplete\n                            );\n                        } else {\n                            return (\n                                filterLocation.value === event.groupname &&\n                                filterStartPower <= parseInt(event.sysReDPower) / 1000 &&\n                                filterEndPower >= parseInt(event.sysReDPower) / 1000\n                            );\n                        }\n                    } else {\n                        if (filterStatus) {\n                            return (\n                                filterLocation.value === event.groupname &&\n                                filterStatus.value === event.sysReDIsComplete\n                            );\n                        } else {\n                            return filterLocation.value === event.groupname;\n                        }\n                    }\n                }\n            } else {\n                if (filterDate) {\n                    if (touchedPower) {\n                        if (filterStatus) {\n                            return (\n                                new Date(filterDate._d).getDate() ===\n                                new Date(event.sysReDDate).getDate() &&\n                                filterStartPower <= parseInt(event.sysReDPower) / 1000 &&\n                                filterEndPower >= parseInt(event.sysReDPower) / 1000 &&\n                                filterStatus.value === event.sysReDIsComplete\n                            );\n                        } else {\n                            return (\n                                new Date(filterDate._d).getDate() ===\n                                new Date(event.sysReDDate).getDate() &&\n                                filterStartPower <= parseInt(event.sysReDPower) / 1000 &&\n                                filterEndPower >= parseInt(event.sysReDPower) / 1000\n                            );\n                        }\n                    } else {\n                        if (filterStatus) {\n                            return (\n                                new Date(filterDate._d).getDate() ===\n                                new Date(event.sysReDDate).getDate() &&\n                                filterStatus.value === event.sysReDIsComplete\n                            );\n                        } else {\n                            return (\n                                new Date(filterDate._d).getDate() ===\n                                new Date(event.sysReDDate).getDate()\n                            );\n                        }\n                    }\n                } else {\n                    if (touchedPower) {\n                        if (filterStatus) {\n                            return (\n                                filterStartPower <= parseInt(event.sysReDPower) / 1000 &&\n                                filterEndPower >= parseInt(event.sysReDPower) / 1000 &&\n                                filterStatus.value === event.sysReDIsComplete\n                            );\n                        } else {\n                            return (\n                                filterStartPower <= parseInt(event.sysReDPower) / 1000 &&\n                                filterEndPower >= parseInt(event.sysReDPower) / 1000\n                            );\n                        }\n                    } else {\n                        if (filterStatus) {\n                            return filterStatus.value === event.sysReDIsComplete;\n                        } else {\n                            // console.log(\"no\");\n                            return null;\n                        }\n                    }\n                }\n            }\n        });\n        // console.log(\"newEvents\", newEvents);\n        this.setState({showEvents: newEvents});\n    };\n\n    onClickPriceDialog = (e, name, date, startTime, endTime, hasCompleted) => {\n        const {price, openPriceDialog} = this.state;\n\n        return;\n    };\n\n    render() {\n        const {classes} = this.props;\n        const {\n            status,\n            validationText,\n            filterLocation,\n            filterDate,\n            filterStatus,\n            openAddEvent,\n            events,\n            power,\n            location,\n            loading,\n            date,\n            editClicked,\n            from,\n            to,\n            filterStartPower,\n            filterEndPower,\n            locations,\n            showEvents,\n            namePrice,\n            datePrice,\n            startTimePrice,\n            endTimePrice,\n            hasCompletedPrice,\n            openPriceDialog,\n            price,\n            isEmail,\n            idPrice\n        } = this.state;\n\n        const {isAuthenticated, user, error} = this.props.auth;\n\n        return (\n            <div\n                style={{\n                    position: \"relative\",\n                    backgroundColor: \"#FBFBFB\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"space-around\",\n                    alignItems: loading ? \"center\" : \"flex-start\",\n                    padding: \"5vw 0 0 5vw\"\n                }}\n            >\n                {loading ? (\n                    <div\n                        style={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\"\n                        }}\n                    >\n                        <Spinner/>\n                    </div>\n                ) : (\n                    <div\n                        style={{\n                            display: \"flex\",\n                            width: \"100%\",\n                            justifyContent: \"space-around\",\n                            alignItems: \"center\",\n                            flexDirection: \"column\"\n                        }}\n                    >\n                        <div\n                            style={{\n                                display: \"flex\",\n                                justifyContent: \"space-evenly\",\n                                width: \"100%\"\n                            }}\n                        >\n                            <div\n                                style={{\n                                    display: \"flex\",\n                                    width: \"65vw\",\n                                    flexDirection: \"column\",\n                                    alignItems: \"flex-start\"\n                                }}\n                            >\n                                <div\n                                    style={{\n                                        width: \"100%\",\n                                        display: \"flex\",\n                                        justifyContent: \"flex-start\",\n                                        alignItems: \"center\"\n                                    }}\n                                >\n                                    <Typography\n                                        style={{\n                                            fontSize: \"2.2vw\",\n                                            paddingRight: \"20px\",\n                                            fontWeight: \"bolder\",\n                                            fontFamily: \"Gotham Rounded Bold\"\n                                        }}\n                                    >\n                                        Events\n                                    </Typography>\n                                    <Typography\n                                        style={{\n                                            color: \"#BDBDBD\",\n                                            fontFamily: \"Gotham Rounded Bold\",\n                                            paddingTop: \"1%\",\n                                            fontSize: \"1.3vw\"\n                                        }}\n                                    >{`${Array.isArray(showEvents) ? showEvents.length : \"\"} ${\n                                        Array.isArray(showEvents)\n                                            ? showEvents.length === 1\n                                            ? \"result\"\n                                            : \"results\"\n                                            : \"\"\n                                    }`}</Typography>\n                                </div>\n                                <div style={{width: \"100%\"}}>\n                                    <Table>\n                                        <TableHead style={{backgroundColor: \"#FBFBFB\"}}>\n                                            <TableCell\n                                                style={{\n                                                    color: \"#BDBDBD\",\n                                                    fontFamily: \"Gotham Rounded Bold\",\n                                                    fontSize: \"1.3vw\"\n                                                }}\n                                            >\n                                                Location\n                                            </TableCell>\n                                            <TableCell\n                                                style={{\n                                                    color: \"#BDBDBD\",\n                                                    fontFamily: \"Gotham Rounded Bold\",\n                                                    fontSize: \"1.3vw\"\n                                                }}\n                                            >\n                                                Date\n                                            </TableCell>\n                                            <TableCell\n                                                style={{\n                                                    color: \"#BDBDBD\",\n                                                    fontFamily: \"Gotham Rounded Bold\",\n                                                    fontSize: \"1.3vw\"\n                                                }}\n                                            >\n                                                Time\n                                            </TableCell>\n                                            <TableCell\n                                                style={{\n                                                    color: \"#BDBDBD\",\n                                                    fontFamily: \"Gotham Rounded Bold\",\n                                                    fontSize: \"1.3vw\"\n                                                }}\n                                            >\n                                                Power\n                                            </TableCell>\n                                            <TableCell></TableCell>\n                                            <TableCell\n                                                style={{\n                                                    color: \"#BDBDBD\",\n                                                    fontFamily: \"Gotham Rounded Bold\",\n                                                    fontSize: \"1.3vw\"\n                                                }}\n                                            >\n                                                Status\n                                            </TableCell>\n                                            <TableCell></TableCell>\n                                            <TableCell></TableCell>\n                                        </TableHead>\n                                        <TableBody>\n                                            {Array.isArray(showEvents)\n                                                ? showEvents.map(row => {\n                                                    row.availablepower = row.power\n                                                    row.groupname = row.groupname\n                                                    row.sysReDCompVal = row.compval\n                                                    row.sysReDControlMode = ''\n                                                    row.sysReDCreatTime = row.createdTime\n                                                    row.sysReDDaily = ''\n                                                    row.sysReDDate = row.date\n                                                    row.sysReDEndCap = row.endCap\n                                                    row.sysReDEstGen = row.estgen\n                                                    row.sysReDEventStatus = row.eventstatus\n                                                    row.sysReDGroupID = row.groupId\n                                                    row.sysReDId = 'eventId'\n                                                    row.sysReDIsComplete = row.isComplete\n                                                    row.sysReDIsEmail = row.isemail\n                                                    row.sysReDIsPrice = row.isprice\n                                                    row.sysReDIsStart = row.isStart\n                                                    row.sysReDIsValid = 1\n                                                    row.sysReDMode = ''\n                                                    row.sysReDNeedCharge = 0\n                                                    row.sysReDPower = row.power\n                                                    row.sysReDPrice = row.power.price\n                                                    row.sysReDSOC = 10\n                                                    row.sysReDStartCap = row.startBattery\n                                                    row.sysReDStartTime = row.startTime\n                                                    row.sysReDEndTime = row.endTime\n                                                    row.sysReDStatus = \"1\"\n                                                    row.sysReDTargetCap = row.finalBattery\n                                                    return (\n                                                        <TableRow\n                                                            style={{\n                                                                backgroundColor: \"#fff\",\n                                                                border: \"15px solid #FBFBFB\"\n                                                            }}\n                                                        >\n\n                                                            <TableCell style={{whiteSpace: \"nowrap\"}}>\n                                                                <div\n                                                                    style={{\n                                                                        display: \"flex\",\n                                                                        flexDirection: \"column\",\n                                                                        justifyContent: \"flex-end\"\n                                                                    }}\n                                                                >\n                                                                    <Typography\n                                                                        style={{\n                                                                            padding: 0,\n                                                                            margin: 0,\n                                                                            fontFamily: \"Gotham Rounded Medium\",\n                                                                            color: \"#2E384D\",\n                                                                            fontSize: \"1.2vw\"\n                                                                        }}\n                                                                    >\n                                                                        {row.groupname}\n                                                                    </Typography>\n                                                                    <Typography\n                                                                        style={{\n                                                                            padding: 0,\n                                                                            margin: 0,\n                                                                            color: \"#BDBDBD\",\n                                                                            fontFamily: \"Gotham Rounded Light\",\n                                                                            fontSize: \"1.2vw\"\n                                                                        }}\n                                                                    >{`#${row.sysReDId}`}</Typography>\n                                                                </div>\n                                                            </TableCell>\n                                                            <TableCell\n                                                                style={{\n                                                                    whiteSpace: \"nowrap\",\n                                                                    fontFamily: \"Gotham Rounded Light\",\n                                                                    color: \"#2E384D\",\n                                                                    fontSize: \"1.2vw\"\n                                                                }}\n                                                            >\n                                                                {moment(row.sysReDDate).format(\n                                                                    \"DD / MM / YY\"\n                                                                )}\n                                                            </TableCell>\n                                                            <TableCell\n                                                                style={{\n                                                                    whiteSpace: \"nowrap\",\n                                                                    fontFamily: \"Gotham Rounded Light\",\n                                                                    color: \"#2E384D\",\n                                                                    fontSize: \"1.2vw\"\n                                                                }}\n                                                            >\n                                                                {`${moment(\n                                                                    row.sysReDStartTime,\n                                                                    \"HH:mm\"\n                                                                ).format(\"HH:mm\")} - ${moment(\n                                                                    row.sysReDEndTime,\n                                                                    \"HH:mm\"\n                                                                ).format(\"HH:mm\")}`}\n                                                            </TableCell>\n                                                            <TableCell\n                                                                style={{\n                                                                    whiteSpace: \"nowrap\",\n                                                                    fontFamily: \"Gotham Rounded Light\",\n                                                                    color: \"#2E384D\",\n                                                                    fontSize: \"1.2vw\"\n                                                                }}\n                                                            >\n                                                                {`${row.sysReDPower / 1000}kW`}\n                                                            </TableCell>\n                                                            <TableCell\n                                                                style={{\n                                                                    whiteSpace: \"nowrap\",\n                                                                    fontFamily: \"Gotham Rounded Light\",\n                                                                    color: \"#2E384D\",\n                                                                    fontSize: \"1.2vw\"\n                                                                }}\n                                                            >\n                                                                <div\n                                                                    style={\n                                                                        row.sysReDEventStatus === 0 ||\n                                                                        row.sysReDEventStatus === 1 ||\n                                                                        row.sysReDEventStatus === 4\n                                                                            ? {\n                                                                                backgroundColor: \"#fff\",\n                                                                                border: \"solid\",\n                                                                                borderColor: \"rgb(124, 124, 124)\",\n                                                                                borderWidth: 4,\n                                                                                borderRadius: 40,\n                                                                                width: \"1vw\",\n                                                                                height: \"1vw\"\n                                                                            }\n                                                                            : {\n                                                                                backgroundColor: \"green\",\n                                                                                borderRadius: 40,\n                                                                                width: \"1vw\",\n                                                                                height: \"1vw\"\n                                                                            }\n                                                                    }\n                                                                >\n                                                                    &nbsp;\n                                                                </div>\n                                                            </TableCell>\n                                                            <TableCell\n                                                                style={{\n                                                                    // whiteSpace: \"nowrap\",\n                                                                    fontFamily: \"Gotham Rounded Light\",\n                                                                    color: \"#2E384D\",\n                                                                    fontSize: \"1.2vw\"\n                                                                }}\n                                                            >\n                                                                {row.sysReDEventStatus === 0 ||\n                                                                row.sysReDEventStatus === 1\n                                                                    ? \"Scheduled\"\n                                                                    : row.sysReDEventStatus === 2\n                                                                        ? \"Completed\"\n                                                                        : row.sysReDEventStatus === 4\n                                                                            ? \"No Available Power\\n to discharge\"\n                                                                            : \"Completed and\\n Sent Email to Customer\"}\n                                                            </TableCell>\n                                                            <TableCell\n                                                                // onClick={() => this.onClickEvent(row)}\n                                                                style={{\n                                                                    whiteSpace: \"nowrap\",\n                                                                    color: \"#25A8A8\",\n                                                                    cursor: \"pointer\",\n                                                                    fontSize: \"1.2vw\",\n                                                                    fontFamily: \"Gotham Rounded Medium\"\n                                                                }}\n                                                            >\n                                                                {row.sysReDEventStatus === 0 ||\n                                                                row.sysReDEventStatus === 1 ||\n                                                                row.sysReDEventStatus === 4 ? (\n                                                                    <MoneyOff/>\n                                                                ) : (\n                                                                    <AttachMoneyOutlined\n                                                                        onClick={e =>\n                                                                            this.setState({\n                                                                                idPrice: row.sysReDId,\n                                                                                price:\n                                                                                    row.sysReDPrice === null\n                                                                                        ? \"\"\n                                                                                        : row.sysReDPrice,\n                                                                                isEmail: row.sysReDIsEmail,\n                                                                                openPriceDialog: true,\n                                                                                namePrice: row.groupname,\n                                                                                datePrice: row.sysReDDate,\n                                                                                startTimePrice: row.sysReDStartTime,\n                                                                                endTimePrice: row.sysReDEndTime,\n                                                                                hasCompletedPrice:\n                                                                                row.sysReDEventStatus\n                                                                            })\n                                                                        }\n                                                                    />\n                                                                )}\n                                                            </TableCell>\n                                                            <TableCell\n                                                                onClick={() => this.onClickEvent(row)}\n                                                                style={{\n                                                                    whiteSpace: \"nowrap\",\n                                                                    color: \"#25A8A8\",\n                                                                    cursor: \"pointer\",\n                                                                    fontSize: \"1.2vw\",\n                                                                    fontFamily: \"Gotham Rounded Medium\"\n                                                                }}\n                                                            >\n                                                                {row.sysReDEventStatus === \"0\"\n                                                                    ? \"Edit\"\n                                                                    : \"View\"}\n                                                            </TableCell>\n                                                        </TableRow>\n                                                    );\n                                                })\n                                                : \"\"}\n                                        </TableBody>\n                                    </Table>\n                                </div>\n                                <Dialog\n                                    fullWidth\n                                    open={openPriceDialog}\n                                    onClose={() => this.setState({openPriceDialog: false})}\n                                >\n                                    <DialogTitle\n                                        style={{\n                                            whiteSpace: \"nowrap\",\n                                            color: \"#25A8A8\",\n                                            cursor: \"pointer\",\n                                            fontSize: \"1.2vw\",\n                                            fontFamily: \"Gotham Rounded Medium\"\n                                        }}\n                                    >\n                                        AEMO spot price\n                                    </DialogTitle>\n                                    <DialogContent>\n                                        <div\n                                            style={{\n                                                color: \"#BDBDBD\",\n                                                fontFamily: \"Gotham Rounded Medium\",\n                                                padding: 0,\n                                                margin: 0,\n                                                fontSize: \"1vw\"\n                                            }}\n                                        >{`Please enter the AEMO spot price for the completed event on ${moment(\n                                            datePrice\n                                        ).format(\"DD/MM/YYYY\")} from ${moment(\n                                            startTimePrice,\n                                            \"HH:mm\"\n                                        ).format(\"HH:mm\")} to ${moment(\n                                            endTimePrice,\n                                            \"HH:mm\"\n                                        ).format(\"HH:mm\")} in ${namePrice}`}</div>\n                                        <div style={{width: \"15vw\", height: \"1vw\"}}></div>\n                                        <TextField\n                                            InputProps={{\n                                                startAdornment: (\n                                                    <InputAdornment position=\"start\">$</InputAdornment>\n                                                ),\n                                                endAdornment: (\n                                                    <InputAdornment position=\"end\">/MWh</InputAdornment>\n                                                )\n                                            }}\n                                            inputProps={{style: {textAlign: \"right\"}}}\n                                            disabled={isEmail === \"0\" ? false : true}\n                                            placeholder=\"Enter your price\"\n                                            value={price}\n                                            name=\"price\"\n                                            onChange={e => this.onChange(e, \"price\", false)}\n                                        />\n                                        {hasCompletedPrice !== \"3\" ? (\n                                            <DialogActions>\n                                                <div style={{width: \"15vw\", height: \"5vw\"}}></div>\n                                                <Button\n                                                    style={{\n                                                        color: \"#fff\",\n                                                        textTransform: \"none\",\n                                                        backgroundColor: \"#25A8A8\",\n                                                        width: \"30%\"\n                                                    }}\n                                                    disabled={isEmail === \"0\" ? false : true}\n                                                    onClick={() => this.onClickSavePrice(idPrice, price)}\n                                                >\n                                                    Save\n                                                </Button>\n                                                <Button\n                                                    onClick={() =>\n                                                        this.onClickSaveAndSendPrice(idPrice, price)\n                                                    }\n                                                    style={{\n                                                        color: \"#fff\",\n                                                        textTransform: \"none\",\n                                                        backgroundColor: \"#25A8A8\",\n                                                        width: \"30%\"\n                                                    }}\n                                                    disabled={isEmail === \"0\" ? false : true}\n                                                >\n                                                    Save &#38; Email\n                                                </Button>\n                                            </DialogActions>\n                                        ) : (\n                                            <div style={{width: \"15vw\", height: \"2vw\"}}></div>\n                                        )}\n                                    </DialogContent>\n                                </Dialog>\n                            </div>\n                            <div style={{width: \"15vw\", height: \"27vw\"}}>\n                                <Card style={{width: \"100%\", height: \"100%\"}}>\n                                    <CardContent\n                                        style={{\n                                            display: \"flex\",\n                                            height: \"100%\",\n                                            flexDirection: \"column\",\n                                            alignItems: \"center\"\n                                        }}\n                                    >\n                                        <div style={{width: \"88%\", height: \"100%\"}}>\n                                            <div\n                                                style={{\n                                                    display: \"flex\",\n                                                    height: \"100%\",\n                                                    flexDirection: \"column\",\n                                                    justifyContent: \"space-evenly\",\n                                                    alignItems: \"flex-start\"\n                                                }}\n                                            >\n                                                <Typography\n                                                    style={{\n                                                        color: \"#25A8A8\",\n                                                        fontFamily: \"Gotham Rounded Light\",\n                                                        letterSpacing: \"1.2133px\",\n                                                        paddingBottom: \"3%\",\n                                                        fontSize: \"1vw\",\n                                                        textTransform: \"uppercase\"\n                                                    }}\n                                                >\n                                                    Filter\n                                                </Typography>\n                                                <Typography\n                                                    style={{\n                                                        width: \"30%\",\n                                                        paddingRight: \"3%\",\n                                                        color: \"#BDBDBD\",\n                                                        letterSpacing: \"1.5px\",\n                                                        fontFamily: \"Gotham Rounded Medium\"\n                                                    }}\n                                                >\n                                                    Location\n                                                </Typography>\n                                                <div\n                                                    style={{\n                                                        width: \"100%\",\n                                                        paddingRight: \"3%\",\n                                                        color: \"#BDBDBD\",\n                                                        letterSpacing: \"1.5px\",\n                                                        fontFamily: \"Gotham Rounded Medium\"\n                                                        //  padding: \"3% 0 8% 0\"\n                                                    }}\n                                                >\n                                                    <Select\n                                                        value={filterLocation}\n                                                        styles={customStyles}\n                                                        onChange={e => {\n                                                            // console.log(\"e\", e);\n\n                                                            this.onChange(e, \"filterLocation\", true);\n                                                        }}\n                                                        options={\n                                                            locations\n                                                                ? locations.map(location => {\n                                                                    console.log(location)\n                                                                    return {\n                                                                        value: location.name,\n                                                                        label: location.name,\n                                                                        id: location.id\n                                                                    };\n                                                                })\n                                                                : []\n                                                        }\n                                                    />\n                                                </div>\n                                                <Typography\n                                                    style={{\n                                                        width: \"30%\",\n                                                        paddingRight: \"3%\",\n                                                        color: \"#BDBDBD\",\n                                                        letterSpacing: \"1.5px\",\n                                                        fontFamily: \"Gotham Rounded Medium\"\n                                                    }}\n                                                >\n                                                    Date\n                                                </Typography>\n                                                <div\n                                                    style={{\n                                                        width: \"100%\",\n                                                        paddingRight: \"3%\",\n                                                        color: \"#BDBDBD\",\n                                                        letterSpacing: \"1.5px\",\n                                                        fontFamily: \"Gotham Rounded Medium\"\n                                                    }}\n                                                >\n                                                    <ThemeProvider theme={muiTheme}>\n                                                        <MuiPickersUtilsProvider utils={MomentUtils}>\n                                                            <DatePicker\n                                                                // TextFieldComponent={<OutlinedInput style={{backgroundColor:'red'}}/>}\n                                                                InputProps={{\n                                                                    classes: {\n                                                                        // root:classes.datePickerInput\n                                                                    }\n                                                                }}\n                                                                // classes={{\n                                                                //   input:classes.input\n                                                                // }}\n\n                                                                disableToolbar\n                                                                style={{\n                                                                    padding: 0,\n                                                                    fontFamily: \"Gotham Rounded Medium\"\n                                                                }}\n                                                                inputVariant=\"outlined\"\n                                                                // minDate={new Date()}\n                                                                // minDateMessage=\"Date should not be in the past!\"\n                                                                format=\"DD/MM/YY\"\n                                                                placeholder=\"Date\"\n                                                                // className=\"MuiOutlinedInput-input\"\n                                                                onChange={e =>\n                                                                    this.onChange(e, \"filterDate\", true)\n                                                                }\n                                                                value={filterDate}\n                                                            />\n                                                        </MuiPickersUtilsProvider>\n                                                    </ThemeProvider>\n                                                    {/* <Select\n                          menuPortalTarget={document.body}\n                          styles={{\n                            menuPortal: styles => ({ ...styles, zIndex: 4 })\n                          }}\n                          value={filterDate}\n                          onChange={e => {this.onChange(e, \"filterDate\",true)}}\n                          options={[\n                            { value: \"2019-09-13\", label: \"13/09/2019\" },\n                            { value: \"2019-09-14\", label: \"14/09/2019\" },\n                            { value: \"2019-09-15\", label: \"15/09/2019\" },\n                            { value: \"2019-09-16\", label: \"16/09/2019\" },\n                            { value: \"2019-09-17\", label: \"17/09/2019\" },\n                            { value: \"2019-09-18\", label: \"18/09/2019\" },\n                            { value: \"2019-09-19\", label: \"19/09/2019\" },\n                            { value: \"2019-09-20\", label: \"20/09/2019\" },\n                            { value: \"2019-09-21\", label: \"21/09/2019\" },\n                            { value: \"2019-09-22\", label: \"22/09/2019\" },\n                            { value: \"2019-09-23\", label: \"23/09/2019\" },\n                            { value: \"2019-09-24\", label: \"24/09/2019\" },\n                            { value: \"2019-09-26\", label: \"25/09/2019\" },\n                            { value: \"2019-09-27\", label: \"26/09/2019\" },\n                            { value: \"2019-09-28\", label: \"27/09/2019\" },\n                            { value: \"2019-09-29\", label: \"28/09/2019\" },\n                            { value: \"2019-09-30\", label: \"29/09/2019\" },\n                            { value: \"2019-09-31\", label: \"30/09/2019\" }\n                          ]}\n                        /> */}\n                                                </div>\n                                                <div\n                                                    style={{\n                                                        width: \"100%\",\n                                                        display: \"flex\",\n                                                        justifyContent: \"space-between\",\n                                                        alignItems: \"center\",\n                                                        paddingBottom: \"4%\"\n                                                    }}\n                                                >\n                                                    <Typography\n                                                        style={{\n                                                            width: \"30%\",\n                                                            paddingRight: \"3%\",\n                                                            color: \"#BDBDBD\",\n                                                            letterSpacing: \"1.5px\",\n                                                            fontFamily: \"Gotham Rounded Medium\"\n                                                        }}\n                                                    >\n                                                        Power\n                                                    </Typography>\n                                                    <Typography\n                                                        style={{\n                                                            whiteSpace: \"nowrap\",\n                                                            color: \"#828282\",\n                                                            fontFamily: \"Gotham Rounded Medium\",\n                                                            fontSize: \"1vw\"\n                                                        }}\n                                                    >\n                                                        {`${filterStartPower}-${filterEndPower} kWh`}\n                                                    </Typography>\n                                                </div>\n                                                <Slider\n                                                    classes={{\n                                                        thumb: classes.thumb,\n                                                        track: classes.track\n                                                    }}\n                                                    value={[filterStartPower, filterEndPower]}\n                                                    onChange={(e, value) => {\n                                                        //  console.log(typeof value[0]);\n                                                        //  console.log(typeof value[1]);\n                                                        this.setState(\n                                                            {\n                                                                touchedPower: true,\n                                                                filterStartPower: value[0],\n                                                                filterEndPower: value[1]\n                                                            },\n                                                            () => {\n                                                                return this.onFilterEvents();\n                                                            }\n                                                        );\n                                                    }}\n                                                    valueLabelDisplay=\"auto\"\n                                                    aria-labelledby=\"range-slider\"\n                                                    // getAriaValueText={value => {\n                                                    //   return `${value}`;\n                                                    // }}\n                                                />\n                                                <Typography\n                                                    style={{\n                                                        width: \"30%\",\n                                                        paddingRight: \"3%\",\n                                                        color: \"#BDBDBD\",\n                                                        letterSpacing: \"1.5px\",\n                                                        fontFamily: \"Gotham Rounded Medium\"\n                                                    }}\n                                                >\n                                                    Status\n                                                </Typography>\n                                                <div\n                                                    style={{\n                                                        width: \"100%\",\n                                                        padding: \"3% 0 8% 0\",\n                                                        color: \"#BDBDBD\",\n                                                        letterSpacing: \"1.5px\",\n                                                        fontFamily: \"Gotham Rounded Medium\"\n                                                    }}\n                                                >\n                                                    <Select\n                                                        menuPortalTarget={document.body}\n                                                        styles={{\n                                                            menuPortal: styles => ({\n                                                                ...styles,\n                                                                zIndex: 0,\n                                                                paddingRight: \"3%\",\n                                                                color: \"#BDBDBD\",\n                                                                letterSpacing: \"1.5px\",\n                                                                fontFamily: \"Gotham Rounded Medium\"\n                                                            })\n                                                        },customStyles}\n                                                        options={[\n                                                            {value: \"0\", label: \"Scheduled\"},\n                                                            {value: \"1\", label: \"Completed\"}\n                                                        ]}\n                                                        value={filterStatus}\n                                                        onChange={e => {\n                                                            this.setState({filterStatus: e}, () => {\n                                                                return this.onFilterEvents();\n                                                            });\n                                                        }}\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </CardContent>\n                                </Card>\n                            </div>\n                        </div>\n\n                        {user.includes(\"admin\") ? (\n                            <div\n                                style={{\n                                    position: \"fixed\",\n                                    display: \"flex\",\n                                    alignSelf: \"flex-end\",\n                                    padding: \"0 2vw\",\n                                    bottom: \"3%\",\n                                    right: \"3%\"\n                                }}\n                            >\n                                <Fab\n                                    style={{\n                                        // position: \"absolute\",\n                                        // bottom: \"3%\",\n                                        // right: \"3%\",\n                                        backgroundColor: \"#25A8A8\"\n                                    }}\n                                    onClick={() => this.setState({openAddEvent: true})}\n                                >\n                                    <Add style={{color: \"#fff\"}}/>\n                                </Fab>\n                            </div>\n                        ) : (\n                            \"\"\n                        )}\n                    </div>\n                )}\n                <Dialog\n                    fullWidth\n                    style={{zIndex: 0}}\n                    open={openAddEvent}\n                    onClose={() => this.setState({openAddEvent: false})}\n                >\n                    <DialogContent style={{height: \"28vw\"}}>\n                        <div\n                            style={{\n                                width: \"100%\",\n                                height: \"100%\",\n                                display: \"flex\",\n                                flexDirection: \"column\",\n                                alignItems: \"center\"\n                            }}\n                        >\n                            <div\n                                style={{\n                                    width: \"80%\",\n                                    display: \"flex\",\n                                    flexDirection: \"column\",\n                                    justifyContent: \"space-evenly\",\n                                    height: \"100%\"\n                                }}\n                            >\n                                <Typography\n                                    style={{\n                                        color: \"#25A8A8\",\n                                        fontFamily: \"Gotham Rounded Light\"\n                                    }}\n                                >\n                                    {\"Add event\".toUpperCase()}\n                                </Typography>\n                                <div\n                                    style={{\n                                        display: \"flex\",\n                                        flexDirection: \"row\",\n                                        width: \"100%\",\n                                        justifyContent: \"space-between\"\n                                    }}\n                                >\n                                    <Typography\n                                        style={{\n                                            color: \"#333\",\n                                            fontFamily: \"Gotham Rounded Light\"\n                                        }}\n                                    >\n                                        Location\n                                    </Typography>\n                                    <div style={{width: \"70%\"}}>\n                                        <Select\n                                            menuPortalTarget={document.body}\n                                            styles={{\n                                                menuPortal: styles => ({...styles, zIndex: 4})\n                                            },customStyles}\n                                            onChange={e => this.onChange(e, \"location\", false)}\n                                            options={\n                                                locations\n                                                    ? locations.map(location => {\n                                                        // console.log(\"location\", location.DisGroupName);\n                                                        return {\n                                                            value: location.name,\n                                                            label: location.name,\n                                                            id: location.id,\n                                                            maxPower: location.maxPower / 1000\n                                                        };\n                                                    })\n                                                    : []\n                                            }\n                                            value={location}\n                                        />\n                                    </div>\n                                </div>\n                                <div\n                                    style={{\n                                        display: \"flex\",\n                                        flexDirection: \"row\",\n                                        width: \"100%\",\n                                        justifyContent: \"space-between\"\n                                    }}\n                                >\n                                    <Typography\n                                        style={{\n                                            color: \"#333\",\n                                            fontFamily: \"Gotham Rounded Light\"\n                                        }}\n                                    >\n                                        Date\n                                    </Typography>\n                                    <div style={{width: \"70%\"}}>\n                                        {/* <Select\n                      menuPortalTarget={document.body}\n                      styles={{\n                        menuPortal: styles => ({ ...styles, zIndex: 4 })\n                      }}\n                      options={[\n                        { value: \"2019-09-10\", label: \"10/09/2019\" },\n                        { value: \"2019-09-11\", label: \"11/09/2019\" },\n                        { value: \"2019-09-12\", label: \"12/09/2019\" },\n                        { value: \"2019-09-13\", label: \"13/09/2019\" },\n                        { value: \"2019-09-14\", label: \"14/09/2019\" },\n                        { value: \"2019-09-15\", label: \"15/09/2019\" },\n                        { value: \"2019-09-16\", label: \"16/09/2019\" },\n                        { value: \"2019-09-17\", label: \"17/09/2019\" },\n                        { value: \"2019-09-18\", label: \"18/09/2019\" },\n                        { value: \"2019-09-19\", label: \"19/09/2019\" },\n                        { value: \"2019-09-20\", label: \"20/09/2019\" },\n                        { value: \"2019-09-21\", label: \"21/09/2019\" },\n                        { value: \"2019-09-22\", label: \"22/09/2019\" },\n                        { value: \"2019-09-23\", label: \"23/09/2019\" },\n                        { value: \"2019-09-24\", label: \"24/09/2019\" },\n                        { value: \"2019-09-26\", label: \"25/09/2019\" },\n                        { value: \"2019-09-27\", label: \"26/09/2019\" },\n                        { value: \"2019-09-28\", label: \"27/09/2019\" },\n                        { value: \"2019-09-29\", label: \"28/09/2019\" },\n                        { value: \"2019-09-30\", label: \"29/09/2019\" },\n                        { value: \"2019-09-31\", label: \"30/09/2019\" }\n                      ]}\n                      onChange={e => this.onChange(e, \"date\",false)}\n                      value={date}\n                    /> */}\n                                        <ThemeProvider theme={muiTheme}>\n                                            <MuiPickersUtilsProvider utils={MomentUtils}>\n                                                <DatePicker\n                                                    disableToolbar\n                                                    style={{\n                                                        padding: 0,\n                                                        color: \"#000\",\n                                                        fontFamily: \"Gotham Rounded Light\"\n                                                        // border:'1px solid red',\n                                                        // borderRadius:'4px'\n                                                    }}\n                                                    placeholder=\"Date\"\n                                                    inputVariant=\"outlined\"\n                                                    // minDate={new Date()}\n                                                    // minDateMessage=\"Date should not be in the past!\"\n                                                    format=\"DD/MM/YY\"\n                                                    onChange={e => this.onChange(e, \"date\", false)}\n                                                    value={date}\n                                                />\n                                            </MuiPickersUtilsProvider>\n                                        </ThemeProvider>\n                                    </div>\n                                </div>\n                                <div\n                                    style={{\n                                        display: \"flex\",\n                                        flexDirection: \"row\",\n                                        width: \"100%\",\n                                        alignItems: \"center\",\n                                        justifyContent: \"space-between\"\n                                    }}\n                                >\n                                    <Typography\n                                        style={{\n                                            color: \"#333\",\n                                            fontFamily: \"Gotham Rounded Light\"\n                                        }}\n                                    >\n                                        Time\n                                    </Typography>\n                                    <div\n                                        style={{\n                                            display: \"flex\",\n                                            width: \"70%\",\n                                            alignItems: \"center\"\n                                        }}\n                                    >\n                                        <div style={{width: \"40%\"}}>\n                                            {/* <Select\n                        menuPortalTarget={document.body}\n                        styles={{\n                          menuPortal: styles => ({ ...styles, zIndex: 4 })\n                        }}\n                        value={from}\n                        onChange={e => this.onChange(e, \"from\", false)}\n                        options={[\n                          { value: \"01\", label: \"1 am\" },\n                          { value: \"02\", label: \"2 am\" },\n                          { value: \"03\", label: \"3 am\" },\n                          { value: \"04\", label: \"4 am\" },\n                          { value: \"05\", label: \"5 am\" },\n                          { value: \"06\", label: \"6 am\" },\n                          { value: \"07\", label: \"7 am\" },\n                          { value: \"08\", label: \"8 am\" },\n                          { value: \"09\", label: \"9 am\" },\n                          { value: \"10\", label: \"10 am\" },\n                          { value: \"11\", label: \"11 am\" },\n                          { value: \"12\", label: \"12 pm\" },\n                          { value: \"13\", label: \"1 pm\" },\n                          { value: \"14\", label: \"2 pm\" },\n                          { value: \"15\", label: \"3 pm\" },\n                          { value: \"16\", label: \"4 pm\" },\n                          { value: \"17\", label: \"5 pm\" },\n                          { value: \"18\", label: \"6 pm\" },\n                          { value: \"19\", label: \"7 pm\" },\n                          { value: \"20\", label: \"8 pm\" },\n                          { value: \"21\", label: \"9 pm\" },\n                          { value: \"22\", label: \"10 pm\" },\n                          { value: \"23\", label: \"11 pm\" },\n                          { value: \"24\", label: \"12 pm\" }\n                        ]}\n                      /> */}\n                                            {/* <MuiPickersUtilsProvider utils={MomentUtils}>\n                        <TimePicker\n                          inputVariant=\"outlined\"\n                          clearable\n                          ampm={false}\n                          //  label=\"24 hours\"\n                          value={from}\n                          onChange={e => this.onChange(e, \"from\", false)}\n                        />\n                      </MuiPickersUtilsProvider> */}\n                                            <TextField\n                                                type=\"time\"\n                                                inputProps={{\n                                                    step: '1800'\n                                                }}\n                                                variant=\"outlined\"\n                                                value={from === null ? \"02:00\" : from}\n                                                style={{fontFamily: \"Gotham Rounded Light\"}}\n                                                placeholder={\"02:00\"}\n                                                onChange={e => this.setState({from: e.target.value})}\n                                            />\n                                        </div>\n                                        <Typography\n                                            style={{\n                                                width: \"20%\",\n                                                textAlign: \"center\",\n                                                color: \"#333\",\n                                                fontFamily: \"Gotham Rounded Light\"\n                                            }}\n                                        >\n                                            to\n                                        </Typography>\n                                        <div style={{width: \"40%\"}}>\n                                            {/* <Select\n                        onChange={e => this.onChange(e, \"to\", false)}\n                        menuPortalTarget={document.body}\n                        styles={{\n                          menuPortal: styles => ({ ...styles, zIndex: 4 })\n                        }}\n                        options={[\n                          { value: \"01\", label: \"1 am\" },\n                          { value: \"02\", label: \"2 am\" },\n                          { value: \"03\", label: \"3 am\" },\n                          { value: \"04\", label: \"4 am\" },\n                          { value: \"05\", label: \"5 am\" },\n                          { value: \"06\", label: \"6 am\" },\n                          { value: \"07\", label: \"7 am\" },\n                          { value: \"08\", label: \"8 am\" },\n                          { value: \"09\", label: \"9 am\" },\n                          { value: \"10\", label: \"10 am\" },\n                          { value: \"11\", label: \"11 am\" },\n                          { value: \"12\", label: \"12 pm\" },\n                          { value: \"13\", label: \"1 pm\" },\n                          { value: \"14\", label: \"2 pm\" },\n                          { value: \"15\", label: \"3 pm\" },\n                          { value: \"16\", label: \"4 pm\" },\n                          { value: \"17\", label: \"5 pm\" },\n                          { value: \"18\", label: \"6 pm\" },\n                          { value: \"19\", label: \"7 pm\" },\n                          { value: \"20\", label: \"8 pm\" },\n                          { value: \"21\", label: \"9 pm\" },\n                          { value: \"22\", label: \"10 pm\" },\n                          { value: \"23\", label: \"11 pm\" },\n                          { value: \"24\", label: \"12 pm\" }\n                        ]}\n                        value={to}\n                      /> */}\n                                            <TextField\n                                                type=\"time\"\n                                                inputProps={{\n                                                    step: '1800'\n                                                }}\n                                                variant=\"outlined\"\n                                                value={to === null ? \"04:00\" : to}\n                                                style={{fontFamily: \"Gotham Rounded Light\"}}\n                                                placeholder={\"04:00\"}\n                                                onChange={e => this.setState({to: e.target.value})}\n                                            />\n                                            {/* <MuiPickersUtilsProvider utils={MomentUtils}>\n                        <TimePicker\n                          inputVariant=\"outlined\"\n                          clearable\n                          ampm={false}\n                          //  label=\"24 hours\"\n                          value={to}\n                          onChange={e => this.onChange(e, \"to\", false)}\n                        />\n                      </MuiPickersUtilsProvider> */}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div\n                                    style={{\n                                        display: \"flex\",\n                                        flexDirection: \"row\",\n                                        width: \"100%\",\n                                        justifyContent: \"space-between\"\n                                    }}\n                                >\n                                    <Typography\n                                        style={{\n                                            color: \"#333\",\n                                            fontFamily: \"Gotham Rounded Light\"\n                                        }}\n                                    >\n                                        Power\n                                    </Typography>\n                                    <Typography\n                                        style={{\n                                            color: \"#333\",\n                                            fontFamily: \"Gotham Rounded Light\"\n                                        }}\n                                    >{`${power} kW`}</Typography>\n                                </div>\n                                <Slider\n                                    value={power}\n                                    aria-label=\"custom thumb label\"\n                                    max={location ? location.maxPower : 100}\n                                    onChange={(e, value) => {\n                                        // console.log(\"e\", e);\n                                        // console.log(\"value\", value);\n                                        return this.setState({power: value});\n                                    }}\n                                    classes={{\n                                        thumb: classes.thumb,\n                                        track: classes.track\n                                    }}\n                                />\n                                <div\n                                    style={{\n                                        display: \"flex\",\n                                        flexDirection: \"column\",\n                                        justifyContent: \"center\",\n                                        alignItems: \"center\"\n                                    }}\n                                >\n                                    {validationText ? (\n                                        <Typography style={{color: \"red\"}}>\n                                            {validationText}\n                                        </Typography>\n                                    ) : null}\n                                    {error ? (\n                                        <Typography style={{color: \"red\"}}>\n                                            {error.value}\n                                        </Typography>\n                                    ) : null}\n                                </div>\n                                <div\n                                    style={{\n                                        display: \"flex\",\n                                        justifyContent: \"center\",\n                                        alignItems: \"center\",\n                                        width: \"100%\"\n                                    }}\n                                >\n                                    <Button\n                                        onClick={this.onClickSave}\n                                        variant=\"contained\"\n                                        style={{\n                                            color: \"#fff\",\n                                            textTransform: \"none\",\n                                            backgroundColor: \"#25A8A8\",\n                                            width: \"30%\"\n                                        }}\n                                    >\n                                        Save\n                                    </Button>\n                                </div>\n                            </div>\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nconst styles = {\n    datePickerInput: {\n        // border:'0.2rem solid red',\n        // \"&:visited\":{\n        //   border:\"0.2rem solid blue\"\n        // },\n        // \"&:focus\":{\n        //   border:\"0.2rem solid green\"\n        // }\n    },\n    root: {\n        borderRadius: 20,\n        marginBottom: \"30px\",\n        display: \"inline-block\",\n        backgroundColor: \"orange\"\n    },\n    thumb: {\n        backgroundColor: \"white\",\n        borderStyle: \"solid\",\n        borderColor: \"#25A8A8\",\n        borderWidth: \"3px\"\n    },\n    track: {\n        height: \"3px\",\n        backgroundColor: \"#25A8A8\"\n    },\n    dialogContainer: {\n        width: \"55vw\"\n    }\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default withStyles(styles)(connect(mapStateToProps)(Events));\n\n/*\n    {[\n                    {location:'New South Wales-Sydney #1210',date:'01/08/19',time:'3-6pm',power:'74 kW',status:'Scheduled'},\n                    {location:'New South Wales-Sydney #1210',date:'01/08/19',time:'3-6pm',power:'74 kW',status:'Scheduled'},\n                    {location:'New South Wales-Sydney #1210',date:'01/08/19',time:'3-6pm',power:'74 kW',status:'Scheduled'},\n                    {location:'New South Wales-Sydney #1210',date:'01/08/19',time:'3-6pm',power:'74 kW',status:'Scheduled'},\n                    {location:'New South Wales-Sydney #1210',date:'01/08/19',time:'3-6pm',power:'74 kW',status:'Scheduled'},\n                    {location:'New South Wales-Sydney #1210',date:'01/08/19',time:'3-6pm',power:'74 kW',status:'Scheduled'},\n                    {location:'New South Wales-Sydney #1210',date:'01/08/19',time:'3-6pm',power:'74 kW',status:'Scheduled'},\n                    {location:'New South Wales-Sydney #1210',date:'01/08/19',time:'3-6pm',power:'74 kW',status:'Completed'},\n                    {location:'New South Wales-Sydney #1210',date:'01/08/19',time:'3-6pm',power:'74 kW',status:'Completed'},\n                    {location:'New South Wales-Sydney #1210',date:'01/08/19',time:'3-6pm',power:'74 kW',status:'Completed'}\n                ].map(row=>{\n            \n*/\n","import React, {Component} from \"react\";\nimport {\n    Button,\n    Typography,\n    Card,\n    CardContent,\n    TextField\n} from \"@material-ui/core\";\nimport {connect} from \"react-redux\";\nimport ChartJS from \"../common/Chart\";\n// import arrowDown from \"../../assets/stock-market-arrow.svg\";\n// import arrowUp from \"../../assets/arrow-up-icon.png\";\nimport {CallMade, CallReceived} from '@material-ui/icons';\nimport Spinner from \"../common/Spinner\";\nimport moment from \"moment\";\nimport {TimePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport {Base64} from \"js-base64\";\n\nconst username = localStorage.getItem('username');\nconst password = localStorage.getItem('password');\n// const username = 'saraswata';\n// const password = '#abcd123';\nconst userID = localStorage.getItem('userID');\n\nclass EditEvent extends Component {\n    state = {\n        completed: false,\n        event: {},\n        chartData: [],\n        loading: true,\n        editClicked: false,\n        date: \"\",\n        startTime: '',\n        endTime: '',\n        power: \"\"\n    };\n\n    componentDidMount() {\n        console.log(\"this.props\", this.props);\n        const {state} = this.props.location;\n        const {isAuthenticated, user} = this.props.auth;\n\n        console.log(\"user\", user);\n        if (state !== undefined) {\n            fetch(\n                \"https://vppspark.shinehub.com.au:8443/backend-service/dashboard/data/group/\" + state.event.groupId + \"?date=\" + state.event.sysReDDate,\n                {\n                    method: \"GET\",\n                    headers: {\n                        \"Authorization\": \"Basic \" + Base64.encode(`${username}:${password}`),\n                        \"Content-Type\": \"application/json\"\n                    }\n                }\n            )\n                .then(res => res.json())\n                .then(res => {\n                    console.log(\"chart res\", res);\n                    console.log(\"event\", state.event);\n                    return this.setState({\n                        loading: false,\n                        event: state.event,\n                        date: state.event.sysReDDate,\n                        startTime: moment(state.event.sysReDStartTime, \"HH:mm\"),\n                        endTime: moment(state.event.sysReDEndTime, \"HH:mm\"),\n                        power: parseInt(state.event.sysReDEstGen),\n                        chartData: res.data ? res.data : {},\n                        completed: state.event.sysReDEventStatus === 0 ? false : state.event.sysReDEventStatus === 1 ? false : true\n\n                    });\n                });\n        }\n    }\n\n\n    onChange = (e, name) => {\n        console.log('name', name);\n        console.log(\"e\", e);\n        switch (name) {\n            case \"startTime\":\n                return this.setState({startTime: e});\n\n            case \"endTime\":\n                return this.setState({endTime: e});\n            default:\n                return this.setState({[e.target.name]: e.target.value});\n        }\n    };\n\n    onExportEvent = () => {\n\n        window.open(\"https://vppspark.shinehub.com.au:8443/backend-service/system/export/\")\n\n        // fetch(\n        //     \"http://54.206.87.91:8080/backend-service/system/export/\" ,\n        //     {\n        //         method: \"GET\",\n        //         headers: {\n        //             \"Authorization\": \"Basic \" + Base64.encode(`${username}:${password}`),\n        //             \"Content-Type\": \"application/json\"\n        //         }\n        //     }\n        // )\n    };\n\n    onEditEvent = event => {\n        console.log(\"edit event\");\n        const {state} = this.props.location;\n        const {isAuthenticated, user} = this.props.auth;\n        const {date, startTime, endTime, power} = this.state;\n        this.setState({loading: true});\n        fetch(\n            \"https://monitoring.shinehub.com.au/handler/web/Group/handleEditRelationDispatch.php\",\n            {\n                method: \"POST\",\n                body: JSON.stringify({\n                    d: JSON.stringify({\n                        cvs: {\n                            a: event.sysReDId,\n                            st: moment(startTime, \"HH:mm\").format(\"HH:mm\"),\n                            et: moment(endTime, \"HH:mm\").format(\"HH:mm\"),\n                            d: date,\n                            p: power,\n                            i: 0\n                        }\n                    })\n                })\n            }\n        )\n            .then(res => res.json())\n            .then(res => {\n                // console.log(\"handleEditRelationDispatch res\", res);\n                fetch(\n                    \"https://vppspark.shinehub.com.au:8443/backend-service/event/group/a3eee230-1ced-11ea-8009-4b84bd592adf/date/2019-12-26\",\n                    {\n                        method: \"GET\",\n                        headers: {\n                            \"Authorization\": \"Basic \" + Base64.encode(`${username}:${password}`),\n                            \"Content-Type\": \"application/json\"\n                        },\n                    }\n                )\n                    .then(res => res.json())\n                    .then(res => {\n\n                        const updatedEvent = res.dara.filter(\n                            event => event.groupId === state.event.sysReDId\n                        );\n                        // console.log(\"updatedEvent\", updatedEvent);\n                        // console.log(\"power\", typeof updatedEvent.sysReDPower);\n                        // console.log(\"power\", typeof parseInt(updatedEvent.sysReDPower));\n\n                        return this.setState({\n                            loading: false,\n                            editClicked: false,\n                            event: updatedEvent[0],\n                            date: updatedEvent[0].sysReDDate,\n                            startTime: moment(updatedEvent[0].sysReDStartTime, \"HH:mm\").format(\"HH:mm\"),\n                            endTime: moment(updatedEvent[0].sysReDEndTime, \"HH:mm\").format(\"HH:mm\"),\n                            power: parseInt(updatedEvent[0].sysReDEstGen),\n                            completed: updatedEvent[0].sysReDEventStatus === \"0\" ? false : updatedEvent[0].sysReDEventStatus === \"1\" ? false : true\n                        });\n                    });\n            });\n    };\n\n    render() {\n        const {\n            completed,\n            event,\n            editClicked,\n            chartData,\n            loading,\n            power,\n            date,\n            startTime,\n            endTime\n        } = this.state;\n\n        const {isAuthenticated, user} = this.props.auth;\n\n        let chartContent;\n\n        if (Object.keys(chartData).length > 0) {\n            chartContent = (\n                <div\n                    style={{\n                        // padding: \"3% 0\",\n                        display: \"flex\",\n                        width: \"100%\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\"\n                    }}\n                >\n                    <Card style={{borderRadius: 8, width: \"100%\"}}>\n                        <CardContent style={{width: \"100%\"}}>\n                            <div\n                                style={{\n                                    display: \"flex\",\n                                    marginBottom: \"6px\",\n                                    justifyContent: \"space-between\",\n                                    alignItems: \"center\"\n                                }}\n                            >\n                                <Typography\n                                    style={{\n                                        padding: \"0 0 3% 8%\",\n                                        color: \"#83C4C4\",\n                                        fontSize: \"1.3vw\",\n                                        fontFamily: \"Gotham Rounded Light\"\n                                    }}\n                                >\n                                    {\"Power\".toUpperCase()}\n                                </Typography>\n                                <div\n                                    style={{\n                                        display: \"flex\",\n                                        justifyContent: \"space-evenly\",\n                                        alignItems: \"center\",\n                                        alignSelf: \"flex-end\"\n                                    }}\n                                >\n                                    <div\n                                        style={{\n                                            display: \"flex\",\n                                            paddingRight: \"2vw\",\n                                            justifyContent: \"center\",\n                                            alignItems: \"center\"\n                                        }}\n                                    >\n                                        <div\n                                            style={{\n                                                backgroundColor: \"#25A8A8\",\n                                                width: \"1vw\",\n                                                height: \"1vw\",\n                                                borderRadius: 50\n                                            }}\n                                        >\n                                            &nbsp;\n                                        </div>\n                                        <Typography\n                                            style={{\n                                                fontSize: \"1.5vw\",\n                                                fontFamily: \"Gotham Rounded Light\",\n                                                color: \"#828282\"\n                                            }}\n                                        >\n                                            Available Power\n                                        </Typography>\n                                    </div>\n                                    <div\n                                        style={{\n                                            display: \"flex\",\n                                            justifyContent: \"center\",\n                                            alignItems: \"center\"\n                                        }}\n                                    >\n                                        <div\n                                            style={{\n                                                backgroundColor: \"#B5D145\",\n                                                width: \"1vw\",\n                                                height: \"1vw\",\n                                                borderRadius: 40\n                                            }}\n                                        >\n                                            &nbsp;\n                                        </div>\n                                        <Typography\n                                            style={{\n                                                fontSize: \"1.5vw\",\n                                                fontFamily: \"Gotham Rounded Light\",\n                                                color: \"#828282\",\n                                                paddingRight: \"28px\"\n                                            }}\n                                        >\n                                            Net Grid Power\n                                        </Typography>\n                                    </div>\n                                </div>\n                            </div>\n                            <ChartJS\n                                time={chartData.Time}\n                                charge={chartData.NetToGrid}\n                                availablePower={chartData.AvailablePower}\n                                netInGrid={chartData.NetToGrid}\n                            />\n                        </CardContent>\n                    </Card>\n                </div>\n            );\n        }\n\n        return (\n            <div\n                style={{\n                    paddingLeft: \"8vw\",\n                    display: \"flex\",\n                    backgroundColor: \"#FBFBFB\",\n                    width: \"90vw\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\"\n                }}\n            >\n                {loading ? (\n                    <Spinner/>\n                ) : (\n                    <div style={{width: \"100%\"}}>\n                        <div\n                            style={{\n                                width: \"100%\",\n                                padding: \"3% 0\",\n                                display: \"flex\",\n                                flexDirection: \"row\",\n                                justifyContent: \"space-between\",\n                                alignItems: \"center\"\n                            }}\n                        >\n                            <div\n                                style={{\n                                    display: \"flex\",\n                                    width: \"100%\",\n                                    justifyContent: \"flex-start\",\n                                    alignItems: \"center\"\n                                }}\n                            >\n                                <Typography\n                                    variant=\"h5\"\n                                    style={{\n                                        whiteSpace: \"nowrap\",\n                                        color: \"#2E384D\",\n                                        fontSize: \"2.3vw\",\n                                        paddingRight: \"1.3vw\",\n                                        fontFamily: \"Gotham Rounded Medium\"\n                                    }}\n                                >\n                                    {event.groupname}\n                                </Typography>\n                                <Typography\n                                    variant=\"body2\"\n                                    style={{\n                                        whiteSpace: \"nowrap\",\n                                        color: \"#828282\",\n                                        paddingTop: \"0.9vw\",\n                                        fontSize: \"1.2vw\",\n                                        fontFamily: \"Gotham Rounded Light\"\n                                    }}\n                                >\n                                    {`#${event.sysReDId}`}\n                                </Typography>\n                            </div>\n                            {user.includes(\"admin\") ? (\n                                completed ? (\n                                    <div\n                                        style={{\n                                            display: \"flex\",\n                                            justifyContent: \"space-between\",\n                                            width: \"20%\"\n                                        }}\n                                    >\n                                        <Button\n                                            onClick={this.onExportEvent}\n                                            variant=\"contained\"\n                                            style={{\n                                                color: \"#fff\",\n                                                backgroundColor: \"#25A8A8\",\n                                                width: \"7vw\",\n                                                height: \"2.3vw\",\n                                                fontSize: \"0.7vw\",\n                                                textTransform: \"none\",\n                                                fontFamily: \"Gotham Rounded Light\"\n                                            }}\n                                        >\n                                            Export\n                                        </Button>\n                                    </div>\n                                ) : (\n                                    <div\n                                        style={{\n                                            display: \"flex\",\n                                            justifyContent: \"space-between\",\n                                            width: \"20%\"\n                                        }}\n                                    >\n                                        <Button\n                                            onClick={() => {\n                                                !editClicked\n                                                    ? this.setState({editClicked: true})\n                                                    : this.onEditEvent(event);\n                                            }}\n                                            variant=\"contained\"\n                                            style={{\n                                                color: \"#fff\",\n                                                backgroundColor: \"#25A8A8\",\n                                                width: \"7vw\",\n                                                height: \"2.3vw\",\n                                                fontSize: \"0.7vw\",\n                                                textTransform: \"none\",\n                                                fontFamily: \"Gotham Rounded Light\"\n                                            }}\n                                        >\n                                            Edit\n                                        </Button>\n                                        <Button\n                                            onClick={() => {\n                                                this.setState({editClicked: false});\n                                            }}\n                                            variant=\"outlined\"\n                                            style={{\n                                                color: \"#25A8A8\",\n                                                width: \"7vw\",\n                                                height: \"2.3vw\",\n                                                fontSize: \"0.7vw\",\n                                                textTransform: \"none\",\n                                                fontFamily: \"Gotham Rounded Light\"\n                                            }}\n                                        >\n                                            Cancel\n                                        </Button>\n                                    </div>\n                                )\n                            ) : (\n                                \"\"\n                            )}\n                        </div>\n                        <div\n                            style={{\n                                paddingBottom: \"3%\",\n                                width: \"100%\",\n                                height: \"12vw\",\n                                display: \"flex\",\n                                flexDirection: \"row\",\n                                justifyContent: \"space-between\",\n                                alignItems: \"center\"\n                            }}\n                        >\n                            <Card style={{width: \"70%\", height: \"100%\", padding: \"1% 0\"}}>\n                                <CardContent style={{height: \"100%\"}}>\n                                    <div style={{display: \"flex\", height: \"100%\"}}>\n                                        <div\n                                            style={{\n                                                paddingRight: \"5%\",\n                                                width: \"50%\",\n                                                height: \"100%\",\n                                                display: \"flex\",\n                                                flexDirection: \"column\",\n                                                justifyContent: \"space-between\",\n                                                alignItems: \"center\"\n                                            }}\n                                        >\n                                            <div\n                                                style={{\n                                                    paddingBottom: \"6%\",\n                                                    width: \"100%\",\n                                                    display: \"flex\",\n                                                    justifyContent: \"flex-start\",\n                                                    alignItems: \"center\"\n                                                }}\n                                            >\n                                                <Typography\n                                                    style={{\n                                                        color: \"#2E384D\",\n                                                        fontFamily: \"Gotham Rounded Medium\",\n                                                        paddingRight: \"4vw\",\n                                                        fontSize: \"1vw\"\n                                                    }}\n                                                >\n                                                    Date\n                                                </Typography>\n                                                {editClicked ? (\n                                                    <TextField\n                                                        name=\"date\"\n                                                        onChange={this.onChange}\n                                                        value={date}\n                                                    />\n                                                ) : (\n                                                    <Typography\n                                                        style={{\n                                                            color: \"#828282\",\n                                                            fontFamily: \"Gotham Rounded Medium\",\n                                                            fontSize: \"1vw\"\n                                                        }}\n                                                    >\n                                                        {moment(event.sysReDDate).format(\"DD/MM/YYYY\")}\n                                                    </Typography>\n                                                )}\n                                            </div>\n                                            <div\n                                                style={{\n                                                    width: \"100%\",\n                                                    display: \"flex\",\n                                                    justifyContent: \"flex-start\",\n                                                    alignItems: \"center\"\n                                                }}\n                                            >\n                                                <Typography\n                                                    style={{\n                                                        color: \"#2E384D\",\n                                                        fontFamily: \"Gotham Rounded Medium\",\n                                                        paddingRight: \"4vw\",\n                                                        fontSize: \"1vw\"\n                                                    }}\n                                                >\n                                                    Time\n                                                </Typography>\n                                                {editClicked ? (\n                                                    <div style={{display: \"flex\"}}>\n                                                        <TextField\n                                                            name=\"startTime\"\n                                                            type=\"time\"\n                                                            inputProps={{\n                                                                step: '1800'\n                                                            }}\n                                                            onChange={this.onChange}\n                                                            value={moment(startTime, \"HH:mm\").format(\n                                                                \"HH:mm\"\n                                                            )}\n                                                        />\n                                                        -\n                                                        <TextField\n                                                            name=\"endTime\"\n                                                            type=\"time\"\n                                                            inputProps={{\n                                                                step: '1800'\n                                                            }}\n                                                            onChange={this.onChange}\n                                                            value={moment(endTime, \"HH:mm\").format(\n                                                                \"HH:mm\"\n                                                            )}\n                                                        />\n                                                        {/*<MuiPickersUtilsProvider utils={MomentUtils}>*/}\n                                                        {/*<TimePicker*/}\n                                                        {/*  clearable*/}\n                                                        {/*  ampm={false}*/}\n                                                        {/*  //  label=\"24 hours\"*/}\n                                                        {/*  value={startTime}*/}\n                                                        {/*  onChange={e=>this.onChange(e,\"startTime\")}*/}\n                                                        {/*/>*/}\n                                                        {/*<TimePicker*/}\n                                                        {/*  clearable*/}\n                                                        {/*  ampm={false}*/}\n                                                        {/*  //  label=\"24 hours\"*/}\n                                                        {/*  value={endTime}*/}\n                                                        {/*  onChange={e=>this.onChange(e,\"endTime\")}*/}\n                                                        {/*/>*/}\n                                                        {/*</MuiPickersUtilsProvider>*/}\n\n                                                    </div>\n                                                ) : (\n                                                    <Typography\n                                                        style={{\n                                                            color: \"#828282\",\n                                                            fontFamily: \"Gotham Rounded Medium\",\n                                                            fontSize: \"1vw\"\n                                                        }}\n                                                    >\n                                                        {`${moment(event.sysReDStartTime, \"HH:mm\").format(\n                                                            \"HH:mm\"\n                                                        )}-${moment(event.sysReDEndTime, \"HH:mm\").format(\n                                                            \"HH:mm\"\n                                                        )}`}\n                                                    </Typography>\n                                                )}\n                                            </div>\n                                        </div>\n                                        <div\n                                            style={{\n                                                width: \"50%\",\n                                                display: \"flex\",\n                                                flexDirection: \"column\",\n                                                height: \"100%\",\n                                                justifyContent: \"space-between\",\n                                                alignItems: \"center\"\n                                            }}\n                                        >\n                                            <div\n                                                style={{\n                                                    paddingBottom: \"6%\",\n                                                    width: \"100%\",\n                                                    display: \"flex\",\n                                                    justifyContent: \"flex-start\",\n                                                    alignItems: \"center\"\n                                                }}\n                                            >\n                                                <Typography\n                                                    style={{\n                                                        color: \"#2E384D\",\n                                                        fontFamily: \"Gotham Rounded Medium\",\n                                                        paddingRight: \"4vw\",\n                                                        fontSize: \"1vw\"\n                                                    }}\n                                                >\n                                                    Power\n                                                </Typography>\n                                                {editClicked ? (\n                                                    <TextField\n                                                        name=\"power\"\n                                                        InputProps={{\n                                                            endAdornment: (\n                                                                <InputAdornment position=\"end\">kWh</InputAdornment>\n                                                            )\n                                                        }}\n                                                        inputProps={{style: {textAlign: \"right\"}}}\n                                                        value={power}\n                                                        onChange={this.onChange}\n                                                    />\n                                                ) : (\n                                                    <Typography\n                                                        style={{\n                                                            color: \"#828282\",\n                                                            fontFamily: \"Gotham Rounded Medium\",\n                                                            fontSize: \"1vw\"\n                                                        }}\n                                                    >\n                                                        {`${event.sysReDTargetCap / 1000} kWh out of ${event.sysReDEstGen} kWh`}\n                                                    </Typography>\n                                                )}\n                                            </div>\n                                            <div\n                                                style={{\n                                                    width: \"100%\",\n                                                    display: \"flex\",\n                                                    justifyContent: \"flex-start\",\n                                                    alignItems: \"center\"\n                                                }}\n                                            >\n                                                <Typography\n                                                    style={{\n                                                        color: \"#2E384D\",\n                                                        fontFamily: \"Gotham Rounded Medium\",\n                                                        paddingRight: \"4vw\",\n                                                        fontSize: \"1vw\"\n                                                    }}\n                                                >\n                                                    Status\n                                                </Typography>\n                                                {editClicked ? (\n                                                    <Typography\n                                                        style={{\n                                                            fontSize: \"1vw\",\n                                                            color: \"#828282\",\n                                                            fontFamily: \"Gotham Rounded Medium\"\n                                                        }}\n                                                    >\n                                                        {(event.sysReDEventStatus === \"0\" || event.sysReDEventStatus === \"1\")\n                                                            ? \"Scheduled\"\n                                                            : (event.sysReDEventStatus === '2' ? \"Completed\" : event.sysReDEventStatus === '4' ? 'No Available Power\\n to discharge' : 'Completed and\\n Sent Email to Customer')}\n                                                    </Typography>\n                                                ) : (\n                                                    <Typography\n                                                        style={{\n                                                            color: \"#828282\",\n                                                            fontFamily: \"Gotham Rounded Medium\",\n                                                            fontSize: \"1vw\"\n                                                        }}\n                                                    >\n                                                        {(event.sysReDEventStatus === \"0\" || event.sysReDEventStatus === \"1\")\n                                                            ? \"Scheduled\"\n                                                            : (event.sysReDEventStatus === '2' ? \"Completed\" : event.sysReDEventStatus === '4' ? 'No Available Power\\n to discharge' : 'Completed and\\n Sent Email to Customer')}\n                                                    </Typography>\n                                                )}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </CardContent>\n                            </Card>\n                            <Card style={{width: \"25%\", height: \"100%\"}}>\n                                <CardContent>\n                                    <div\n                                        style={{\n                                            display: \"flex\",\n                                            flexDirection: \"column\",\n                                            alignItems: \"flex-start\"\n                                        }}\n                                    >\n                                        <div\n                                            style={{\n                                                display: \"flex\",\n                                                alignItems: \"center\",\n                                                paddingLeft: \"5%\"\n                                            }}\n                                        >\n                                            <Typography\n                                                style={{\n                                                    fontSize: \"4vw\",\n                                                    color: \"#2E384D\",\n                                                    fontFamily: \"Gotham Rounded Medium\"\n                                                }}\n                                            >\n                                                {event.sysReDEstGen ? event.sysReDEstGen : \"N/A\"}\n                                            </Typography>\n                                            <Typography\n                                                style={{\n                                                    fontSize: \"1vw\",\n                                                    paddingTop: \"2vw\",\n                                                    fontFamily: \"Gotham Rounded Medium\"\n                                                }}\n                                            >\n                                                {event.sysReDEstGen ? \"kWh\" : \"\"}\n                                            </Typography>\n                                        </div>\n                                        <div\n                                            style={{\n                                                display: \"flex\",\n                                                width: \"100%\",\n                                                height: \"100%\",\n                                                paddingLeft: \"5%\",\n                                                paddingTop: \"0\"\n                                            }}\n                                        >\n\n                                            {\n                                                parseInt(event.sysReDEventStatus) == 1 ?\n                                                    <div\n                                                        style={{\n                                                            display: \"flex\",\n                                                            paddingLeft: \"2%\",\n                                                            paddingTop: \"0\",\n                                                            alignItems: \"center\",\n                                                            width: \"100%\",\n                                                            height: \"100%\"\n                                                        }}\n                                                    >\n                                                        <Typography\n                                                            style={{\n                                                                paddingTop: \"0\",\n                                                                fontSize: \"1.0vw\",\n                                                                paddingLeft: \"4px\",\n                                                                color: \"black\",\n                                                                fontWeight: \"500\"\n                                                            }}\n                                                        >\n                                                            Discharging in progress\n                                                        </Typography>\n                                                    </div> :\n                                                    parseInt(event.sysReDCompVal) > 0\n                                                        ?\n                                                        <div\n                                                            style={{\n                                                                display: \"flex\",\n                                                                paddingLeft: \"2%\",\n                                                                paddingTop: \"0\",\n                                                                alignItems: \"center\",\n                                                                width: \"100%\",\n                                                                height: \"100%\"\n                                                            }}\n                                                        >\n                                                            <CallMade\n                                                                style={{\n                                                                    minWidth: 19,\n                                                                    maxWidth: 50,\n                                                                    height: \"auto\",\n                                                                    color: 'green'\n                                                                }}\n                                                            />\n                                                            <Typography\n                                                                style={{\n                                                                    paddingTop: \"0\",\n                                                                    fontSize: \"1.3vw\",\n                                                                    paddingLeft: \"4px\",\n                                                                    color: \"green\",\n                                                                    fontWeight: \"500\"\n                                                                }}\n                                                            >\n                                                                {`${event.sysReDCompVal}%`}\n                                                            </Typography>\n                                                        </div>\n                                                        :\n                                                        <div\n                                                            style={{\n                                                                display: \"flex\",\n                                                                paddingLeft: \"2%\",\n                                                                paddingTop: \"0\",\n                                                                alignItems: \"center\",\n                                                                width: \"100%\",\n                                                                height: \"100%\"\n                                                            }}\n                                                        >\n                                                            <CallReceived\n                                                                style={{\n                                                                    minWidth: 19,\n                                                                    maxWidth: 50,\n                                                                    height: \"auto\",\n                                                                    color: 'red',\n                                                                    transform: 'rotate(270deg)'\n                                                                }}\n                                                            />\n                                                            <Typography\n                                                                style={{\n                                                                    paddingTop: \"0\",\n                                                                    fontSize: \"1.3vw\",\n                                                                    paddingLeft: \"4px\",\n                                                                    color: \"red\",\n                                                                    fontWeight: \"500\"\n                                                                }}\n                                                            >\n                                                                {`${event.sysReDCompVal}%`}\n                                                            </Typography>\n                                                        </div>\n\n\n                                            }\n\n                                        </div>\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        </div>\n                        {chartContent}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(\n    mapStateToProps,\n    {}\n)(EditEvent);\n","import React, { Component } from 'react';\nimport {Route,Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport Layout from '../layout/Layout';\n\nconst PrivateRoute=({component:Component,auth:auth,...rest})=>{\n\n    return (\n        <Route\n            {...rest}\n\n            render={props=>{\n                return auth.isAuthenticated?(\n                    <Layout>\n                    <Component {...props}/>\n                    </Layout>\n                ):(\n                    <Redirect to=\"/login\"/>\n                )\n            }}\n        />\n    )\n\n\n}\n\nconst mapStateToProps=state=>({\n\nauth:state.auth\n\n})\n\nexport default connect(mapStateToProps,{})(PrivateRoute);","import React,{Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport Layout from './components/layout/Layout';\nimport Dashboard from './components/dashboard/Dashboard';\nimport Login from './components/auth/Login';\nimport Events from './components/events/Events';\nimport EditEvent from './components/edit-event/EditEvent';\nimport store from './store/store';\nimport PrivateRoute from './components/common/PrivateRoute';\nimport {LOGIN} from './actions/types';\nimport moment from 'moment';\n\n// fetch('https://monitoring.shinehub.com.au/handler/web/User/handleQueryUserDetail.php',{\n//     method:\"POST\",\n//     body:JSON.stringify({\n//       d:JSON.stringify({\n//         cvs:{\n\n//         }\n//       })\n//     })\n//   })\n// .then(res=>res.json())\n// .then(res=>{\n\n\n\nif( localStorage.getItem('user')!==null){\n  const user=localStorage.getItem('user');\n  const userid=localStorage.getItem('userID');\n  const username=localStorage.getItem('username');\n  const userpassword=localStorage.getItem('password');\n  const expiretime=JSON.parse(localStorage.getItem('exp'));\n\n  console.log('time',new Date().getTime());\n  console.log('expiretime',expiretime);\n\n  const checkExpireTime=()=>{\n\n    if(!expiretime){\n      \n      return;\n    }\n    console.log('date comp',new Date(expiretime).getTime()<new Date().getTime());\n    if(new Date(expiretime).getTime()<new Date().getTime()){\n      \n      return;\n    }\n      \n      \n      \n      return store.dispatch({\n        type:LOGIN,\n        payload:{\n          isAuthenticated:user.length>0,\n          user,\n          userid,\n          username,\n          userpassword\n        }\n      })\n    }\n    \n    checkExpireTime();\n}\nclass App extends Component {\n  \n  state={\n    event:''\n  }\n  \n  render(){\n\n    const {event}=this.state;\n\n    return (\n      <Provider store={store}>\n      <Router>\n    \n     \n        <PrivateRoute exact path=\"/\" component={Dashboard}/>\n        <PrivateRoute exact path=\"/events\" component={Events}/>\n        <PrivateRoute exact path=\"/edit-event\" component={EditEvent}/>\n        <Route exact path=\"/login\" component={Login}/>\n    </Router>\n    </Provider>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/shinehub-logo.6b9f82db.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-analytics.e9c5f666.svg\";","module.exports = __webpack_public_path__ + \"static/media/Calendar.00b94033.svg\";","module.exports = __webpack_public_path__ + \"static/media/menu-icon.c089646c.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar-icon.07a57232.png\";"],"sourceRoot":""}